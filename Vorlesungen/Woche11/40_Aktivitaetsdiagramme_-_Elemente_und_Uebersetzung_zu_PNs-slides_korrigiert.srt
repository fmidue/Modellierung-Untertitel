213 # slide
00:00:00,000 --> 00:00:03,390
Also, dieses Beispiel haben wir gerade gesehen.

00:00:03,390 --> 00:00:08,550
Und ich hatte schon ein paar Andeutungen
gemacht in Richtung Petrinetze.

00:00:08,550 --> 00:00:14,520
Und in der Tat werden wir im Folgenden die
einzelnen Elemente von Aktivitätsdiagrammen,

00:00:14,520 --> 00:00:19,170
also ihre Bestandteile, mit Petrinetz-Bestandteilen
vergleichen. Und zwar angelehnt

00:00:19,170 --> 00:00:24,870
an eine in der Literatur vorkommende Semantik
für zumindest Teile von Aktivitätsdiagrammen.

00:00:24,870 --> 00:00:29,760
Wir werden das nicht benutzen im Sinne,
das wirklich semantisch zu untersuchen,

00:00:29,760 --> 00:00:35,550
sondern werden diese Entsprechung benutzen, um
die Aktivitätsdiagramm-Elemente dabei zu erklären.

00:00:35,550 --> 00:00:39,690
Und wir machen das immer für die
einzelnen Elemente allgemein,

00:00:39,690 --> 00:00:42,510
aber auch bezogen auf dieses Beispiel.

214 # slide
00:00:42,510 --> 00:00:49,530
O.k., also im Grunde genommen ergibt
sich daraus dann eine Möglichkeit,

00:00:49,530 --> 00:00:52,800
Aktivitätsdiagramme in Petrinetze zu übersetzen.

00:00:52,800 --> 00:00:57,960
So, wie wir Petrinetze mit Kapazitäten
in Petrinetze ohne Kapazitäten übersetzt

00:00:57,960 --> 00:01:01,800
hatten. Und dadurch kann man natürlich
 dann auch Aktivitätsdiagramm verstehen,

00:01:01,800 --> 00:01:06,180
weil wir für Petrinetze ja wissen,
was die jeweilige Bedeutung ist.

00:01:06,180 --> 00:01:12,150
O.k., also was sind die erste Art
von Knoten in Aktivitätsdiagrammen?

00:01:12,150 --> 00:01:15,120
Das waren diese Aktionsknoten
oder einfach auch Aktionen.

00:01:15,120 --> 00:01:20,700
Das sind diese Ovale oder
Rechtecke mit abgerundeten Ecken.

00:01:20,700 --> 00:01:24,030
Also diese Art Knoten, die in
dem Diagramm auch so aussahen.

00:01:24,030 --> 00:01:30,720
Also das "Plan erstellen" war ein erster
solcher Aktionsknoten oder eine Aktion.

00:01:30,720 --> 00:01:36,660
O.k. und das entspricht sehr direkt
in Petrinetzen einfach Transitionen.

00:01:36,660 --> 00:01:39,480
In Petrinetzen sahen Transitionen so
aus und konnten einen Namen haben.

00:01:39,480 --> 00:01:42,900
Also so eine Aktion aus einem
Aktivitätsdiagramm würde in einem

00:01:42,900 --> 00:01:45,990
Petrinetz einfach eine Transition
mit dem entsprechenden Namen sein.

00:01:45,990 --> 00:01:49,830
Und weil es um Aktionen geht,
könnte man als Indiz nehmen,

00:01:49,830 --> 00:01:54,750
dass man da in der Regel dann Namen hat, die
irgendwie Tätigkeiten oder Verben entsprechen.

00:01:54,750 --> 00:01:56,610
Ja, wie hier das "Erstellen".

00:01:56,610 --> 00:02:04,410
O.k., die Intuition ist eben,
Aktionen stehen für Tätigkeiten.

00:02:04,410 --> 00:02:06,315
Irgendetwas, das einen Zeitaufwand hat.

00:02:06,315 --> 00:02:07,530
Ja, wir denken wieder an Workflow,

00:02:07,530 --> 00:02:13,320
also an sozusagen das Beschreiben
von abfolgenden Einzelschritten.

00:02:13,320 --> 00:02:16,650
Dann ist jeder Einzelschritt eben
etwas, das irgendwie eine Tätigkeit ist.

00:02:16,650 --> 00:02:24,510
Was vielleicht eine Weile dauert, was eine Aktion
darstellt, so wie die Transitionen in Petrinetzen.

00:02:25,500 --> 00:02:27,240
Also, das wäre nur eine
andere Darstellung sozusagen.

00:02:27,240 --> 00:02:28,350
Also das ist noch ganz einfach:

00:02:28,350 --> 00:02:30,450
Aktionen sind Transitionen.

00:02:30,450 --> 00:02:36,750
O.k., dann gab es die Verbindungen
zwischen den Aktionen.

00:02:36,750 --> 00:02:38,280
Das waren diese Pfeile.

215 # slide
00:02:38,280 --> 00:02:42,900
Das wäre der Kontrollfluss oder
irgendwann dann auch Objektfluss.

00:02:42,900 --> 00:02:47,640
Wenn wir Objektknoten haben, werden wir die Token
dann nicht nur einfach als Markierungen nehmen,

00:02:47,640 --> 00:02:53,010
als Marker, wo denn gerade der
Fokus in dem Aktivitätsdiagramm ist.

00:02:53,010 --> 00:02:54,750
Sondern tatsächlich, wie in dem Hausbau-Beispiel

00:02:54,750 --> 00:02:57,600
ein Token dann für einen konkreten
Plan steht, also für ein Objekt.

00:02:57,600 --> 00:03:02,460
Etwas, das auch vielleicht mit einem Klassen-
und Objektdiagramm in Beziehung steht.

00:03:02,460 --> 00:03:04,830
Dann reden wir eher vom Objektfluss.

00:03:04,830 --> 00:03:08,130
Aber der Punkt ist: Es gibt diesen Fluss
zwischen den Aktionen in erster Linie.

00:03:08,130 --> 00:03:11,760
Wie können wir das in einem Petrinetz darstellen?

00:03:11,760 --> 00:03:14,310
Naja, im Petrinetz kann es ja keine Verbindung,

00:03:14,310 --> 00:03:17,580
keine Verknüpfung geben von einer
Transition zu einer Transition.

00:03:17,580 --> 00:03:21,120
Ja, wenn wir Aktionen als Transitionen
übersetzen, dann wäre "Bauplatz wählen"

00:03:21,120 --> 00:03:25,950
eine Transition, "Architekt suchen"
eine Transition, dann kann es ja nicht,

00:03:25,950 --> 00:03:28,500
wie hier im Aktivitätsdiagramm,
direkt eine Verbindung geben,

00:03:28,500 --> 00:03:33,390
weil in Petrinetzen ja immer Transitionen
und Stellen abwechselnd vorkommen müssen.

00:03:33,390 --> 00:03:39,390
Deswegen wird es dann hier eine sogenannte Hilfsstelle
geben (anderswo später auch Hilfstransitionen).

00:03:39,390 --> 00:03:42,420
Also auf Petrinetz-Seite gibt es eine
Stelle, die kriegt gar keinen Namen,

00:03:42,420 --> 00:03:46,140
die ist nicht direkt durch irgendwas motiviert,
das hier in dem Aktivitätsdiagramm vorkommt.

00:03:46,140 --> 00:03:49,470
Die ist einfach da, um die Verbindung
herzustellen zwischen diesen beiden

00:03:49,470 --> 00:03:54,840
Aktionen bzw. auf Petrinetz-Seite
zwischen diesen beiden Transitionen.

00:03:54,840 --> 00:03:59,610
Denn so ein Ablauf könnte dann ja sein, wenn
irgendwie "Bauplatz wählen" geschaltet hat,

00:03:59,610 --> 00:04:01,800
würde hier ein Token abgelegt, eine Marke.

00:04:01,800 --> 00:04:04,620
Und dann könnte diese Transition
schalten und diese Marke weiterreichen.

00:04:04,620 --> 00:04:09,600
Und dann könnte "Plan erstellen" schalten
und wieder irgendwie noch eine Ausgabe haben.

00:04:09,600 --> 00:04:15,550
Dann würde also dieser Abfolge von
Einzelschritten im Aktivitätsdiagramm das

00:04:15,550 --> 00:04:19,150
nacheinander stattfindende Schalten
dieser Transitionen entsprechen.

00:04:19,150 --> 00:04:21,550
Und dafür sollten sie eben sinnvoll verknüpft

00:04:21,550 --> 00:04:25,150
sein, und das geht hier einfach über
solche vermittelnden Hilfsstellen.

00:04:25,150 --> 00:04:32,980
Ja, also natürlich entsprechen dann
damit diese Kanten/diese Pfeile

00:04:32,980 --> 00:04:37,870
dem zeitlich logischen Ablauf, der
Reihenfolge, in der Dinge passieren.

00:04:39,250 --> 00:04:45,040
Und Hilfsstellen sind das
deswegen, weil sie nur da sind,

00:04:45,040 --> 00:04:48,490
um diese Legalität des Petrinetzes herzustellen.

00:04:48,490 --> 00:04:50,680
Die haben auch keinen eigenen Namen.

00:04:50,680 --> 00:04:53,620
Das hatten wir auch schon öfter, dass
wir in Petrinetzen nicht unbedingt allen

00:04:53,620 --> 00:04:55,660
Elementen einen sinnvollen Namen geben konnten.

00:04:56,320 --> 00:04:58,900
Diese drei Transitionen hätten hier einen
sinnvollen Namen, weil sie diesen Aktionen

00:04:58,900 --> 00:05:03,880
entsprechen. Und das sind Hilfsstellen, weil sie
einfach nur dafür da sind, den Ablauf korrekt

00:05:03,880 --> 00:05:07,990
hinzukriegen. Und nicht etwa da sind, weil sie direkt
irgendetwas aus dem Aktivitätsdiagramm entsprechen.

00:05:09,670 --> 00:05:12,850
Die verdienen sozusagen keinen eigenen
Namen, und sowas Ähnliches haben wir in

00:05:12,850 --> 00:05:14,470
Petrinetzen auch schon für Transitionen gesehen.

00:05:14,470 --> 00:05:17,170
Also Hilfstransitionen, die
keinen eigenen Namen hatten,

00:05:17,170 --> 00:05:21,640
weil sie zum Beispiel nicht hier genau einer
Aktion aus dem Aktivitätsdiagramm entsprechen.

00:05:21,640 --> 00:05:29,080
O.k., also Aktionen
werden zu Transitionen.

00:05:29,080 --> 00:05:38,350
Kontrollfluss kann per eingefügter Stellen und
den jeweiligen Verbindungen realisiert werden.

216 # slide
00:05:38,350 --> 00:05:41,860
Dann gab es in dem Aktivitätsdiagramm,
das wir gesehen hatten, noch diese

00:05:41,860 --> 00:05:43,750
Objektknoten, bzw. einen solchen Objektknoten.

00:05:43,750 --> 00:05:46,630
Das war eine andere Art von
Knoten im Aktivitätsdiagramm.

00:05:46,630 --> 00:05:48,670
Auch anders dargestellt, mit einem Rechteck

00:05:48,670 --> 00:05:51,790
ohne abgerundete Ecken, also
einem tatsächlichen Rechteck.

00:05:51,790 --> 00:05:57,790
Die stehen intuitiv sozusagen
für eine Ablagemöglichkeit,

00:05:57,790 --> 00:06:00,490
für einen Speicher für konkrete Objekte.

00:06:00,490 --> 00:06:04,810
Durchaus zu verstehen im Sinne
objektorientierter Modellierung.

00:06:04,810 --> 00:06:07,150
Also, wenn wir uns vorstellen, dass
wir vielleicht ein Aktivitätsdiagramm

00:06:07,150 --> 00:06:10,480
benutzen, um ein Softwaresystem zu
beschreiben oder zu modellieren,

00:06:10,480 --> 00:06:14,260
bzw. einen Aspekt davon zu modellieren, dann
könnte tatsächlich hier ein Klassenname stehen.

00:06:14,260 --> 00:06:18,340
Aus einem Klassendiagramm, das
wir zuvor entwickelt haben.

00:06:18,340 --> 00:06:22,840
Und die Idee wäre dann, dass die Objekte,
die hier liegen, für welche die Token

00:06:22,840 --> 00:06:26,730
dann stehen, dass es tatsächlich Instanzen
der jeweiligen Klasse sein sollen.

00:06:26,730 --> 00:06:31,260
Das taucht in dem Beispiel jetzt nicht auf, weil
wir kein Klassendiagramm im Hinterkopf haben.

00:06:31,260 --> 00:06:35,790
Aber die Intuition wäre, dass so ein
Objektknoten tatsächlich zur Ablage

00:06:35,790 --> 00:06:38,940
von konkreten Ausprägungen
von Klassen dienen könnte.

00:06:38,940 --> 00:06:43,800
Und diese entsprechen einfach
normalen Stellen im Petrinetz.

00:06:43,800 --> 00:06:47,460
In Petrinetzen, wenn wir irgendwie Ressourcen
ablegen wollten, nutzen wir dafür Stellen.

00:06:47,460 --> 00:06:53,640
Also aus diesem Objektknoten würde im Petrinetz
eine Stelle, und die hat dann auch einen Namen.

00:06:53,640 --> 00:06:57,360
Es ist also nicht nur eine Hilfsstelle,
es ist eine richtige benannte Stelle.

00:06:57,360 --> 00:06:59,910
Logischerweise kriegt sie den gleichen
Namen wie dieser Objektknoten.

00:06:59,910 --> 00:07:03,090
Und wenn es zum Beispiel hier
jetzt mehrere Möglichkeiten gäbe,

00:07:03,090 --> 00:07:05,400
aus denen irgendwie ein Plan resultieren kann,

00:07:05,400 --> 00:07:08,160
dann würde das eben dem entsprechen,
dass es mehrere Transitionen gibt.

00:07:08,160 --> 00:07:12,360
Mehrere Aktionen aus dem Aktivitätsdiagramm,
übersetzt in Transitionen im Petrinetz.

00:07:12,360 --> 00:07:18,660
Mehrere Transitionen, die Marken
auf dieser Stelle ablegen können.

00:07:18,660 --> 00:07:23,490
Also irgendwie eine
Verwaltung von Ressourcen, und

00:07:23,490 --> 00:07:29,010
dafür hatten wir in Petrinetzen
ja Marken auf Stellen abgelegt.

00:07:29,700 --> 00:07:35,130
Aus diesem Teil des Aktivitätsdiagrammes wird dann
dieser Teil eines Petrinetzes, mit diesen beiden

00:07:35,130 --> 00:07:43,620
Aktionen zu Transitionen, und dieser Objektknoten
realisiert durch eine benannte Stelle.

00:07:43,620 --> 00:07:51,120
Die Namen solcher Stellen, oder von Objektknoten,
sind in der Regel Nomen und keine Verben.

00:07:51,120 --> 00:07:53,880
Ja, weil es eben um Objekte geht,
die da abgelegt werden können.

00:07:53,880 --> 00:08:01,410
O.k., das hatte ich eben schon angedeutet.

00:08:01,410 --> 00:08:04,080
Also, wenn wir tatsächlich
Software-Modellierung betreiben,

00:08:04,080 --> 00:08:07,590
dann wären solche Objektknoten
oft mit Klassennamen beschriftet.

00:08:07,590 --> 00:08:10,350
Weil die Intuition dann ist, dass
das die Verbindung herstellt zwischen

00:08:10,350 --> 00:08:11,361
der statischen und der dynamischen Modellierung.

00:08:11,361 --> 00:08:12,330
Die statische Modellierung, die die Klassen und
Objekte beschreibt, und die dynamische Modellierung,

00:08:12,330 --> 00:08:22,320
die dann eben Abfolgen von Aktionen
beschreibt und dabei verwenden kann,

00:08:23,610 --> 00:08:28,290
dass es eben diese Objekttypen aus
der statischen Modellierung gibt.

00:08:28,290 --> 00:08:32,850
Das heißt nicht, dass diese
Objektknoten irgendwie Attribute haben,

00:08:32,850 --> 00:08:37,710
so wie wir Klassen Attribute zugeordnet haben.

00:08:37,710 --> 00:08:41,880
Denn es soll nicht dieser Knoten ein Objekt sein,

00:08:41,880 --> 00:08:44,512
sondern das soll eine Ablage
für verschiedene Objekte sein.

00:08:44,512 --> 00:08:52,080
Also es ergäbe jetzt keinen Sinn, diesen
Knoten irgendwie noch zu strukturieren und

00:08:52,080 --> 00:08:54,450
dort Attributwerte reinzuschreiben, zum Beispiel.

00:08:54,450 --> 00:08:58,290
Weil es nur eine Ablage für konkrete
Objekte ist und nicht ein Objekt.

00:08:58,290 --> 00:09:05,940
O.k., was hatten wir noch in
unserem Beispiel-Aktivitätsdiagramm?

217 # slide
00:09:05,940 --> 00:09:09,210
Nun, wir hatten noch diese Art von Knoten.

00:09:09,210 --> 00:09:14,670
Denen hatte ich noch keinen Namen gegeben, die
heißen Verzweigungsknoten oder "decision nodes".

00:09:14,670 --> 00:09:16,890
In dem Beispiel hatten wir auch
so eine Entscheidung getroffen.

00:09:16,890 --> 00:09:19,230
Das war nach "Erstellen eines Planes".

00:09:19,230 --> 00:09:23,850
Da hatten wir den einreichen wollen,
und da sollte es die Möglichkeit geben,

00:09:23,850 --> 00:09:26,640
dass der Plan entweder angenommen ist oder nicht.

00:09:26,640 --> 00:09:31,350
Und das führte zu verschiedenen
weiteren Abläufen, letztendlich

00:09:31,350 --> 00:09:34,230
eine Verzweigung im
Kontroll- oder Objektfluss.

00:09:34,230 --> 00:09:38,970
Wo aus alternativen Wegen
immer genau einer gewählt wird.

00:09:38,970 --> 00:09:43,500
Also keine Aufsplittung vom
Kontrollfluss oder von Token,

00:09:43,500 --> 00:09:47,700
sondern tatsächlich eine Wahl eines Weges.

00:09:47,700 --> 00:09:51,630
O.k., dafür werden eben
diese Diamantknoten benutzt,

00:09:51,630 --> 00:09:54,900
die mehrere Ein- oder Ausgänge haben können,

00:09:54,900 --> 00:09:59,700
und eventuell an den Ausgängen eben
solche Bedingungen stehen haben.

00:09:59,700 --> 00:10:04,770
Was wäre die Entsprechung in einem Petrinetz?

00:10:04,770 --> 00:10:08,730
Nun, wenn wir im Petrinetz irgendwie
einen Weg verzweigen wollen,

00:10:08,730 --> 00:10:13,140
dann können wir das darüber tun, dass wir aus
einer Stelle, in der ein Token liegen könnte,

00:10:13,140 --> 00:10:17,610
wie zum Beispiel hier der eingereichte
Plan, mehrere mögliche Ausgänge haben.

00:10:17,610 --> 00:10:22,860
Also mehrere mögliche Transitionen haben, die
jeweils diese Stelle als eine Vorbedingung haben.

00:10:25,680 --> 00:10:31,680
In dem Fall, wenn das hier die Transition
zu diesem Aktionsknoten ist, und wir dann

00:10:31,680 --> 00:10:33,750
weiteren Fluss hier und hier haben wollen,

00:10:33,750 --> 00:10:37,650
dann könnten wir nicht aus der Transition
direkt irgendwie zwei Ausgangspfeile haben.

00:10:37,650 --> 00:10:41,370
Denn das würde ja bedeuten, dass wir irgendwas
aufsplitten, also zwei Token ausgeben.

00:10:41,370 --> 00:10:45,900
Nein, es gibt eine Stelle (die NICHT als Hilfsstelle zählt),
in die diese Aktion, diese Transition, ein Token ablegt.

00:10:45,900 --> 00:10:51,150
Und dann könnte es auch hier und hier verschiedene
Transitionen geben, die jede für sich dieses Token

00:10:51,150 --> 00:10:56,269
konsumieren können und dann irgendeinen Fluss
in diese Richtung oder in diese Richtung haben.

00:10:56,269 --> 00:10:59,970
Also, wenn hier unten ein Aktivitätsdiagramm
übersetzt wird in weitere Transitionen,

00:10:59,970 --> 00:11:02,820
dann könnte die erste davon
eben hier die Ausgabe sein.

00:11:02,820 --> 00:11:12,060
O.k. dabei kann es sein, das sehen
wir sogar in dem Beispiel hier,

00:11:12,060 --> 00:11:15,150
dass wir jetzt Hilfstransitionen
einführen müssen.

00:11:15,150 --> 00:11:19,230
Also, dass dann diese Stelle dafür sorgt,
dass wir so eine Verzweigung haben können.

00:11:19,230 --> 00:11:22,140
Könnten wir ja nicht direkt.

00:11:22,140 --> 00:11:26,430
Ja, wenn wir das gleiche wie hier auch machen,
da folgte noch so ein Knoten in dem Beispiel.

00:11:26,430 --> 00:11:30,780
Dann können wir eben nicht einfach
nur sagen, den ersetzen wir auch

00:11:30,780 --> 00:11:33,390
wieder durch eine Stelle so wie diesen
Knoten, und haben eine direkte Verbindung.

00:11:33,390 --> 00:11:34,110
Das geht ja nicht.

00:11:34,110 --> 00:11:37,020
Wegen wieder den Regeln von
Petrinetzen, dass es immer nur

00:11:37,020 --> 00:11:40,800
Verbindungen von Stellen zu Transitionen
und von Transitionen zu Stellen geben kann.

00:11:40,800 --> 00:11:43,500
Dann müssen wir an dieser Stelle
eben eine Hilfstransition einführen.

00:11:43,500 --> 00:11:46,680
Die kriegt auch keinen Namen, die
ist nur dafür da, sozusagen diesen

00:11:46,680 --> 00:11:51,690
Weitertransport eines Tokens von hier nach hier
auf für Petrinetze legale Weise machen zu können.

00:11:51,690 --> 00:11:54,270
Und nicht einfach nur eine Verbindung
von Stelle zu Stelle haben,

00:11:54,270 --> 00:11:55,830
was ja kein valides Petrinetz wäre.

00:11:57,360 --> 00:11:59,430
Das kann also hier auftreten, zum Beispiel,

00:11:59,430 --> 00:12:03,810
weil auf einen Verzweigungsknoten ein
weiterer Verzweigungsknoten oder auch

00:12:03,810 --> 00:12:07,830
ein Objektknoten folgt, der ja auch durch
eine Petrinetzstelle realisiert würde.

00:12:07,830 --> 00:12:11,580
Genauso kann es aber auch bei
der umgekehrten Reihenfolge sein.

00:12:11,580 --> 00:12:16,050
Also nicht nur bei nachfolgenden, sondern auch bei
vorausgehenden Verzweigungen oder Objektknoten,

00:12:16,050 --> 00:12:20,310
und auch den gleich gesehenen Verbindungsknoten.

00:12:20,310 --> 00:12:23,430
Genau genommen ist das hier kein Verzweigungs-

00:12:23,430 --> 00:12:27,810
sondern ein Verbindungsknoten in
dem konkreten Aktivitätsdiagramm.

00:12:30,234 --> 00:12:31,740
Das war ja dieses hier.

00:12:31,740 --> 00:12:36,120
Was ich gerade beschreibe, ist
ja der Weg von hier nach hier.

00:12:36,120 --> 00:12:37,920
Also von diesem Element zu diesem Element.

00:12:38,940 --> 00:12:43,530
Wobei das hier ein Verzweigungsknoten
ist, weil ein Eingang und zwei Ausgänge,

00:12:43,530 --> 00:12:48,480
und das hier ein Verbindungsknoten,
weil zwei Eingänge und ein Ausgang.

00:12:48,480 --> 00:12:52,830
Wie wir ja schon gesehen hatten,

00:12:52,830 --> 00:12:57,540
wie wir ja schon beschrieben hatten
auf einer Folie (wie aus diesem Teil

00:12:57,540 --> 00:13:03,330
des Aktivitätsdiagramms ein Petrinetz-Teil wird),

00:13:03,330 --> 00:13:04,710
da wurde das zu einer Stelle.

00:13:04,710 --> 00:13:08,700
Und dann kann eben nicht von dieser Stelle
zu dieser Stelle direkt eine Verbindung sein.

00:13:08,700 --> 00:13:11,250
Dazwischen muss im Petrinetz hier letztlich

00:13:11,250 --> 00:13:14,910
irgendwo sozusagen eine
Hilfstransition hingemalt stehen.

00:13:14,910 --> 00:13:19,620
Und es wäre dann eben diese
hier in dem konkreten Beispiel.

00:13:19,620 --> 00:13:32,400
O.k., dann haben wir was noch?

218 # slide
00:13:32,400 --> 00:13:38,430
Einige Anmerkungen möchte
ich machen an dieser Stelle.

00:13:38,430 --> 00:13:41,070
Das hatte ich genau genommen
jetzt schon mehrfach gesagt.

00:13:41,070 --> 00:13:46,230
Nämlich wesentlicher Grund für diese
Einführung von Hilfsstellen und

00:13:46,230 --> 00:13:51,540
Hilfstransitionen ist einfach, dass am Ende ja ein
strukturell korrektes Petrinetz herauskommen soll.

00:13:51,540 --> 00:13:55,410
Bei dem eben Stellen und Transitionen
abwechselnd auftreten, und dafür muss

00:13:55,410 --> 00:13:58,230
man gegebenenfalls weitere Elemente hinzufügen,

00:13:58,230 --> 00:14:03,960
die in dem Aktivitätsdiagramm gar nicht sichtbar
waren, weil da andere Elemente drin vorkommen.

00:14:03,960 --> 00:14:08,760
O.k., das hatte ich gerade auch schon angedeutet.

00:14:08,760 --> 00:14:12,990
Also das, was da gerade in diesen eckigen
Klammern stand: "angenommen", "nicht angenommen",

00:14:12,990 --> 00:14:18,630
also letztlich die Steuerung
an der Verzweigung, in welche

00:14:18,630 --> 00:14:20,430
Richtung denn der Kontroll-
oder Objektfluss gehen soll.

00:14:20,430 --> 00:14:22,500
Die sogenannten "Guards",

00:14:22,500 --> 00:14:29,670
die nehmen natürlich irgendwie Bezug
auf Wissen aus der Anwendungsdomäne.

00:14:29,670 --> 00:14:35,070
Die werden jetzt in dem Aktivitätsdiagramm
nicht näher beschrieben.

00:14:35,070 --> 00:14:36,510
Aber die sollten sich logisch nicht überlappen.

00:14:36,510 --> 00:14:38,640
Also es macht Sinn, sowas wie
"angenommen", "nicht angenommen", zu haben.

00:14:38,640 --> 00:14:41,760
Weil das genau gegenteilige Aussagen sind,

00:14:41,760 --> 00:14:44,100
die also weder sich überlappen
noch irgendetwas vergessen.

00:14:45,420 --> 00:14:48,180
Es soll natürlich an so
einem Knoten immer eindeutig

00:14:48,180 --> 00:14:52,440
möglich sein, den
passenden Ausgang zu wählen.

00:14:54,810 --> 00:14:59,070
Aber das ist nicht mehr Teil
des Aktivitätsdiagramms,

00:14:59,070 --> 00:15:04,920
das näher auszuführen, wie
das irgendwie bestimmt wird.

00:15:04,920 --> 00:15:10,200
Wenn es zum Beispiel Objekte sind, die
sich durch das Aktivitätsdiagramm bewegen,

00:15:10,200 --> 00:15:12,930
Objektfluss, dann könnte man sich
vorstellen, dass das Bedingungen sind,

00:15:12,930 --> 00:15:17,250
die dann tatsächlich auf Attribute
von diesen Objekten Bezug nehmen.

00:15:17,250 --> 00:15:18,750
Vielleicht irgendwelche
Booleschen Bedingungen überprüfen.

00:15:18,750 --> 00:15:20,880
Aber das werden wir so detailliert nicht machen,

00:15:20,880 --> 00:15:25,470
weil es uns mehr um die strukturellen
Eigenschaften von Aktivitätsdiagrammen geht

00:15:25,470 --> 00:15:28,560
und nicht um jetzt eine konkrete
Anbindung an Softwaresysteme.

00:15:28,560 --> 00:15:35,190
In normalen Petrinetzen geben wir
solche Bedingungen ja auch nicht an,

00:15:35,190 --> 00:15:38,220
weil das außerhalb der
Semantik von Petrinetzen wäre.

00:15:42,150 --> 00:15:46,830
O.k., und das wäre noch relevant,
wenn wir vielleicht auch quantitativ

00:15:46,830 --> 00:15:52,170
solche Abflussabläufe betrachten
wollten, solche Kontrollflüsse:

00:15:52,170 --> 00:15:54,690
Also die Aktionen, hatte ich
gesagt, das sind Tätigkeiten,

00:15:54,690 --> 00:15:57,690
die haben einen Zeitaufwand.
Von diesen Kontrollelementen,

00:15:57,690 --> 00:16:00,150
also entweder den Verteilungsknoten oder
auch weiteren gleich noch gesehenen,

00:16:00,150 --> 00:16:03,240
von denen nimmt man an, dass
sie einfach sofort passieren.

00:16:03,240 --> 00:16:06,060
Die sind nur dafür da, irgendwie
die Richtung zu beeinflussen,

00:16:06,060 --> 00:16:09,030
in welcher der Fluss stattfindet.

00:16:09,030 --> 00:16:13,800
Das sind selbst keine sinnvollen
Aktionen/Tätigkeiten/Verben,

00:16:13,800 --> 00:16:18,390
die irgendwie als Schritte
extra Zeitaufwand benötigen.

00:16:18,390 --> 00:16:22,140
Das wäre ja relevant, wenn
man so ein Aktivitätsdiagramm

00:16:22,140 --> 00:16:24,690
nutzen wollte, um quantitative
Aussagen zu treffen.

00:16:24,690 --> 00:16:26,520
Das werden wir aber auch nicht tun.

00:16:26,520 --> 00:16:31,350
O.k., besprechen wir noch weitere Elemente.

219 # slide
00:16:31,350 --> 00:16:34,650
Wir hatten noch ein Element,
das waren die Verbindungsknoten.

00:16:35,610 --> 00:16:38,190
Die waren auch so dargestellt,
mit diesem Diamanten.

00:16:38,190 --> 00:16:43,380
Aber im Gegensatz zu den Verzweigungsknoten,
den "decision nodes", sind das eben Stellen,

00:16:43,380 --> 00:16:47,370
an denen alternative Flüsse zusammenkommen.

00:16:47,370 --> 00:16:49,140
Also hier gibt es zwei
Eingänge und einen Ausgang.

00:16:49,140 --> 00:16:53,760
Die führen also alternative
Kontroll- oder Objektflüsse zusammen.

00:16:53,760 --> 00:16:57,150
Im Petrinetz wären das einfach wieder
Stellen (die NICHT als Hilfsstellen zählen).

00:16:57,150 --> 00:17:03,780
Hier ist es ja auch so, dass, wenn ich eine
Stelle habe und es gibt aus zwei verschiedenen

00:17:03,780 --> 00:17:06,990
Richtungen jeweils einen Pfeil von
Transitionen dahin, es dann eben sein kann,

00:17:06,990 --> 00:17:10,980
dass in diesem Fall von links ein Token
kommt oder von rechts ein Token kommt.

00:17:10,980 --> 00:17:12,840
In beiden Fällen gäbe es
hinterher hier ein Token,

00:17:12,840 --> 00:17:18,450
das danach weitergegeben werden könnte an
nachfolgende Transitionen, die hier stehen.

00:17:18,450 --> 00:17:23,760
Das würde also zum Zusammenführen so
eines Flusses, von hier oder von hier,

00:17:23,760 --> 00:17:33,630
für Weiter-/Fortführung dann in
diesem Teil des Petrinetzes dienen.

00:17:33,630 --> 00:17:40,870
O.k., natürlich in der Nachbedingung
verschiedener Transitionen.

00:17:41,410 --> 00:17:44,470
Gegebenenfalls können hier natürlich auch
links und rechts Hilfstransitionen stehen.

00:17:44,470 --> 00:17:49,900
Je nachdem, was denn hier in dem
Aktivitätsdiagramm an diesen beiden Pfeilenden

00:17:49,900 --> 00:17:57,820
passierte, oder Stellen/Positionen, von denen aus
diese Pfeile ausgehen in dem Aktivitätsdiagramm.

00:17:57,820 --> 00:18:05,590
O.k., es gibt nicht nur genau
Verzweigungs- oder Verbindungsknoten.

00:18:05,590 --> 00:18:09,520
Es gibt auch sozusagen den gemeinsamen Fall, wo
wir so einen Diamanten haben, in dem vielleicht

00:18:09,520 --> 00:18:12,055
zum Beispiel zwei Eingänge
und zwei Ausgänge vorkommen.

00:18:12,055 --> 00:18:13,210
Ja, das ist auch legal.

00:18:13,210 --> 00:18:16,480
Das kann auch passieren, kann auch auftreten.

00:18:16,480 --> 00:18:18,670
Und auch das wird übersetzt
einfach durch eine Stelle,

00:18:18,670 --> 00:18:22,480
die dann eben vielleicht in
der Nachbedingung mehrere

00:18:22,480 --> 00:18:26,290
Transitionen und gleichzeitig auch in der
Vorbedingung mehrere Transitionen hat.

00:18:27,160 --> 00:18:31,960
Also, zum Beispiel eine Stelle, wo es hier
von oben und von links eingehende Pfeile gibt,

00:18:31,960 --> 00:18:34,660
und zum Beispiel nach rechts und
nach unten ausgehende Pfeile.

00:18:35,260 --> 00:18:39,610
Das passt also auch mit den
Elementen, die es in Petrinetzen gibt.

00:18:39,610 --> 00:18:47,440
O.k., was hatten wir noch im Aktivitätsdiagramm?

00:18:47,440 --> 00:18:54,370
Nun, wir hatten noch diese beiden grafischen
Elemente, zu denen ich noch nichts gesagt habe.

00:18:54,370 --> 00:18:57,010
Ja, alles andere, was wir hier sehen,
haben wir jetzt schon abgearbeitet.

00:18:57,010 --> 00:18:59,950
Na gut, bis auf auch den Start und das Ende.

00:18:59,950 --> 00:19:01,960
Das sind die Dinge, die wir
noch beschreiben müssen.

220 # slide
00:19:01,960 --> 00:19:09,910
O.k., als erstes davon kommt die Gabelung
oder auch Parallelisierungsknoten.

00:19:09,910 --> 00:19:16,810
Das war genau der Moment, die Stelle, die
Position im Aktivitätsdiagramm, wo so ein

00:19:16,810 --> 00:19:21,970
Fluss sich aufspaltete in dem Beispiel,
das ich ja live durchgeführt hatte.

00:19:21,970 --> 00:19:24,430
Wo ich die Token durch das
Netz hatte wandern lassen.

00:19:24,430 --> 00:19:30,280
Also, das ist eine Stelle, an der ein
Kontroll- oder Objektfluss in mehrere

00:19:30,280 --> 00:19:33,490
parallele Flüsse aufgeteilt
wird: parallel, nebenläufig.

00:19:33,490 --> 00:19:36,250
Wie kann man das?

00:19:36,250 --> 00:19:38,290
Was entspricht dem in einem Petrinetz?

00:19:38,290 --> 00:19:42,280
Nun, eine Transition mit mehreren Ausgängen.

00:19:42,280 --> 00:19:47,710
Also stellen wir uns vor, hier
gibt es eine Marke, die kommt.

00:19:47,710 --> 00:19:53,220
Und die soll hier zu zwei verschiedenen
Flüssen werden. Dann kann das realisiert

00:19:53,220 --> 00:19:57,990
werden durch eine Transition, die diese eine
Marke konsumiert, aber zwei Marken ausgibt.

00:19:57,990 --> 00:19:59,010
Das würde dazu führen, dass danach,

00:19:59,010 --> 00:20:03,690
was auch immer hier unten noch an Teilen
kommt, dass sie beide schalten können,

00:20:03,690 --> 00:20:08,970
die Transitionen, die hier drin vorkommen. Weil
sowohl hier als auch hier eine Marke liegt.

00:20:08,970 --> 00:20:13,950
Also aus Gabelungen im Aktivitätsdiagramm

00:20:13,950 --> 00:20:19,290
werden Transitionen im Petrinetz mit
mehreren Stellen in der Nachbedingung.

00:20:19,290 --> 00:20:20,790
Natürlich können das auch Hilfsstellen sein.

00:20:20,790 --> 00:20:25,380
Das kommt wieder darauf an, was denn hier
noch an Aktivitätsdiagramm-Teilen kommt.

00:20:25,380 --> 00:20:29,550
Vielleicht steht hier direkt ein Aktionsknoten,
dann wäre das hier eine Transition.

00:20:29,550 --> 00:20:32,070
Aber wir können nicht von Transitionen
direkt zu Transitionen schalten.

00:20:32,070 --> 00:20:35,430
Dann haben wir hier eben eine Hilfsstelle
und erst danach kommt die Transition,

00:20:35,430 --> 00:20:39,495
die dem Aktionsknoten entspricht, der hier
vielleicht auf der linken Seite auftrat.

00:20:39,495 --> 00:20:42,690
Und das Gleiche könnte hier
im rechten Fluss passieren.

00:20:42,690 --> 00:20:48,810
O.k., das sind wieder solche unbenannten
Transitionen, die kriegen keinen Namen.

00:20:48,810 --> 00:20:54,105
Wir können hier Gabelung dranschreiben, aber im
Aktivitätsdiagramm haben die ja auch keinen Namen.

00:20:54,105 --> 00:20:58,320
Da haben die Aktionen Namen, die dann
zu benannten Transitionen werden.

00:20:58,320 --> 00:21:07,470
O.k., und jetzt, wie bei den
Verzweigungs- und

00:21:07,470 --> 00:21:12,420
Verbindungsknoten, gibt es auch hier zu
diesem Element sozusagen ein Gegenstück.

00:21:12,420 --> 00:21:19,350
Also zur Gabelung gehört dual die Vereinigung
oder Synchronisationsknoten, wo eben solche

00:21:19,350 --> 00:21:21,870
zwei Flüsse, die hier entstanden
sind, wieder zusammengeführt werden.

221 # slide
00:21:21,870 --> 00:21:31,470
Also Vereinigungen oder "join node", das wäre, wo
mehrere parallele Flüsse zusammengeführt werden.

00:21:31,470 --> 00:21:33,240
Was heißt das im Petrinetz?

00:21:33,240 --> 00:21:35,640
Im Petrinetz heißt das,
dass wir solche zwei Token,

00:21:35,640 --> 00:21:41,280
die in so einer Situation entstanden
sind, wieder verschmelzen müssen.

00:21:41,280 --> 00:21:42,060
Und wie können wir das tun?

00:21:42,060 --> 00:21:47,040
Na, mit einer Transition, die zwei Stellen in
der Vorbedingung statt in der Nachbedingung hat.

00:21:47,040 --> 00:21:55,830
Also diese Art der Darstellung im Aktivitätsdiagramm
entspräche so einer Situation in einem Petrinetz.

00:21:55,830 --> 00:22:04,290
Eine Transition, die aus zwei getrennten Flüssen
jeweils die Token konsumiert und zusammenführt.

00:22:04,290 --> 00:22:06,480
In dem Sinne, dass sie nur
noch ein Token ausgibt.

00:22:06,480 --> 00:22:12,330
Und auch hier kann es wieder sein, dass das nicht
unbedingt zum Beispiel Objektknoten-Stellen sind,

00:22:12,330 --> 00:22:16,560
sondern einfach Hilfsstellen, die vielleicht
nötig sind, weil hier drüber direkt ein

00:22:16,560 --> 00:22:24,810
Aktionsknoten im Aktivitätsdiagramm steht,
der einer Transition im Petrinetz entspricht.

00:22:24,810 --> 00:22:26,190
Und dann gibt es eben noch eine Hilfsstelle,

00:22:26,190 --> 00:22:30,180
die dann von dieser Transition zu dieser
Vereinigungstransition vermittelt.

00:22:30,180 --> 00:22:32,730
Auch das werden wir gleich in dem Beispiel sehen.

00:22:32,730 --> 00:22:34,410
Da taucht sowas ja genau auf.

00:22:34,410 --> 00:22:40,950
Also in unserem Beispiel-Aktivitätsdiagramm war
es ja so, dass hieraus eine Transition wird und

00:22:40,950 --> 00:22:45,060
hieraus auch eine Transition wird,
weil das eben mit Aktionen und

00:22:45,060 --> 00:22:49,590
Synchronisationsknoten/Vereinigungsknoten
im Aktivitätsdiagramm so ist.

00:22:49,590 --> 00:22:52,650
Dann muss es eben dazwischen
hier noch eine Hilfsstelle geben.

00:22:52,650 --> 00:23:00,660
O.k., und wie bei den Verbindungs-
und Verzweigungsknoten kann es

00:23:00,660 --> 00:23:03,000
auch bei den Vereinigungen
und Gabelungen so sein,

00:23:03,000 --> 00:23:06,300
dass sie sozusagen beide
Charakteristika gleichzeitig haben.

00:23:06,300 --> 00:23:10,230
Also ein Balken muss nicht unbedingt einen
Eingang und mehrere Ausgänge oder umgekehrt

00:23:10,770 --> 00:23:16,170
haben, er könnte auch mehrere Eingänge
oben und mehrere Ausgänge unten haben.

00:23:16,170 --> 00:23:18,210
Das würde dann auch mit so
einem Balken dargestellt.

00:23:18,210 --> 00:23:23,580
Aber oftmals ist es tatsächlich so, dass es
genau eine Gabelung oder Vereinigung ist.

00:23:23,580 --> 00:23:28,560
Also wirklich Aufspalten oder
Zusammenführen, nicht eine Mischung davon.

00:23:28,560 --> 00:23:36,600
O.k., natürlich ist so eine
gewisse Disziplin sinnvoll.

00:23:36,600 --> 00:23:41,520
Also oftmals wird es so sein,
dass Vereinigungen dann auftreten,

00:23:41,520 --> 00:23:43,440
wenn es vorher auch Gabelungsknoten gab.

00:23:43,440 --> 00:23:48,030
Also das ist jetzt in dem Beispiel
auch kein Zufall, dass sozusagen dieser

00:23:48,030 --> 00:23:50,730
und dieser Balken irgendwie zusammengehören.

00:23:50,730 --> 00:23:54,900
Also dieser Balken konsumiert
genau die aufgespaltenen Flüsse,

00:23:54,900 --> 00:23:57,090
die hier oben entstanden sind.

00:23:57,090 --> 00:24:02,580
Irgendwie eine Disziplin, dass wenn
irgendwo eine Aufspaltung stattfindet,

00:24:02,580 --> 00:24:05,280
hinterher auch wieder eine
Zusammenführung stattfindet.

00:24:05,280 --> 00:24:10,530
Das legen die Aktivitätsdiagramme nicht
per se fest, dass es immer sein muss.

00:24:10,530 --> 00:24:16,860
Aber in Beispielen wird es oft so sein, dass
es so eine Entsprechung von diesen Knoten gibt.

00:24:16,860 --> 00:24:25,650
O.k., und dann fehlen aus dem
Beispiel-Aktivitätsdiagramm noch

00:24:25,650 --> 00:24:29,940
die speziellen Knoten für den Start
und für das Ende der Bearbeitung.

222 # slide
00:24:29,940 --> 00:24:31,410
Das eine zum Start.

00:24:31,410 --> 00:24:37,500
Das war dieser ausgefüllte Kreis,
der keine eingehende Kante hat.

00:24:37,500 --> 00:24:38,580
Das durfte der auch nicht.

00:24:38,580 --> 00:24:43,470
Also dieser Startknoten darf keine eingehenden
Kanten haben, aber mehrere ausgehende Kanten.

00:24:43,470 --> 00:24:46,890
Und was entspricht dem in einem Petrinetz?

00:24:46,890 --> 00:24:51,420
Nun, einfach eine Stelle, die initial belegt ist.

00:24:51,420 --> 00:24:54,060
Also eine Stelle, auf der
am Anfang ein Token liegt,

00:24:54,060 --> 00:24:57,810
damit überhaupt ein
Fluss zustande kommen kann.

00:24:57,810 --> 00:25:03,120
Wie viele Token liegen da?

00:25:03,120 --> 00:25:03,930
Wie viele Marken liegen da?

00:25:04,440 --> 00:25:07,470
So viele, wie es aus dem
Startknoten ausgehende Kanten gibt.

00:25:07,470 --> 00:25:11,445
Also es könnte sein, dass aus einem Startknoten
im Aktivitätsdiagramm zwei Kanten ausgehen.

00:25:11,445 --> 00:25:16,080
Zum Beispiel eine nach rechts und eine nach
unten. Dann müsste es in dem übersetzten

00:25:16,080 --> 00:25:20,430
Petrinetz auf dieser entsprechenden
Startstelle zwei Marken geben.

00:25:20,430 --> 00:25:23,250
Damit eine sozusagen den Fluss
nach rechts in Gang bringen kann,

00:25:23,250 --> 00:25:25,980
also eine Transition schalten kann,
die hier rechts stehen würde,

00:25:25,980 --> 00:25:29,010
entsprechend irgendwelche
Aktionsknoten, die hier eben stehen.

00:25:29,010 --> 00:25:32,370
Und wenn es hier noch einen zweiten Ausgang gibt,
mit weiteren Aktionen hier unten vielleicht,

00:25:32,370 --> 00:25:34,740
dann müsste es eben hier das zweite Token geben,

00:25:34,740 --> 00:25:40,590
damit auch die Transitionen, die hier unten
übersetzt eingezeichnet werden, schalten können.

00:25:40,590 --> 00:25:46,230
Also eine Stelle mit so vielen
Marken wie es aus dem Startknoten

00:25:46,230 --> 00:25:49,080
des Aktivitätsdiagramms ausgehende Pfeile gibt.

00:25:49,080 --> 00:25:59,100
O.k., dann gibt es so eine Regel, dass
diese Kanten nicht zu Objektknoten führen.

00:25:59,100 --> 00:26:05,700
Also die Intuition ist, dass Objektknoten ja
irgendwelche konkreten Artefakte halten sollen,

00:26:05,700 --> 00:26:09,270
wie den Plan vorhin, und dem muss
immer eine Aktion vorausgehen.

00:26:09,270 --> 00:26:14,220
Also Objekte entstehen nicht
einfach aus dem Nichts.

00:26:14,220 --> 00:26:18,300
Die Idee wäre, wenn wir ein Objekt wie in dem
Aktivitätsdiagramm zum Hausbau haben wollen,

00:26:18,300 --> 00:26:19,440
dann würden wir einen Startknoten haben.

00:26:19,440 --> 00:26:27,360
Der setzt sozusagen eine Aktion in Gang, und aus
dieser Aktion kann dann ein Objekt entstehen,

00:26:27,360 --> 00:26:29,580
das auf einem Objektknoten abgelegt wird.

00:26:29,580 --> 00:26:31,620
Aber Direktübergänge von diesen Startknoten

00:26:31,620 --> 00:26:34,890
zu Objektknoten gibt es in
Aktivitätsdiagrammen nicht.

00:26:37,560 --> 00:26:41,550
Was erlaubt ist, ist, dass es mehrere
Startknoten in einem Aktivitätsdiagramm gibt.

00:26:42,750 --> 00:26:47,880
Anders als im flachen Zustandsdiagramm, wo es
immer einen ausgezeichneten Startknoten gab,

00:26:47,880 --> 00:26:54,150
gibt es im Aktivitätsdiagramm möglicherweise
mehrere so dargestellte Startknoten.

00:26:54,150 --> 00:26:56,970
Und das passt, denn in Petrinetzen können wir

00:26:56,970 --> 00:27:01,140
ja auch am Anfang mehrere Stellen
haben, die mit Marken belegt sind.

00:27:01,140 --> 00:27:02,520
Und genau das würde hier passieren.

00:27:02,520 --> 00:27:06,870
Wenn wir also im Aktivitätsdiagramm
zwei Startknoten haben, hätte

00:27:06,870 --> 00:27:11,550
das übersetzte Petrinetz eben auch zwei Stellen,
in denen zu Beginn mindestens ein Token liegt.

00:27:11,550 --> 00:27:16,470
Und dann können eben an verschiedenen Stellen
gleich zu Beginn Aktionen/Transitionen feuern.

00:27:16,470 --> 00:27:21,660
O.k., und dann muss es auch
noch etwas für das Ende geben.

00:27:22,740 --> 00:27:24,540
Zum Start gehört auch ein Ende.

00:27:24,540 --> 00:27:29,430
Tatsächlich gibt es da zwei verschiedene
Ausprägungen in Aktivitätsdiagrammen.

00:27:29,430 --> 00:27:30,750
Nur eine davon hatten wir bisher gesehen.

223 # slide
00:27:30,750 --> 00:27:33,840
Also in dem Beispiel tauchte dieses Element auf,

00:27:33,840 --> 00:27:35,850
das sogenannte Aktivitätsende.

00:27:35,850 --> 00:27:38,340
Das soll tatsächlich, wenn es denn erreicht

00:27:38,340 --> 00:27:43,860
wird durch einen Fluss, sozusagen
die Aktivität vollständig beenden.

00:27:43,860 --> 00:27:49,380
Also alle Kontroll- und Objektflüsse, die in dem
Aktivitätsdiagramm sozusagen noch im Gange sind,

00:27:50,280 --> 00:27:55,530
würden sofort beendet werden, wenn eines
dieser Aktivitätsende-Elemente erreicht wird.

00:27:55,530 --> 00:27:58,350
Dafür gibt es keine direkte
Entsprechung in Petrinetzen.

00:27:58,350 --> 00:28:01,710
In Petrinetzen kann man nicht irgendwo
beschreiben, "wenn diese Stelle erreicht

00:28:01,710 --> 00:28:06,690
wird, dann verschwinden auf einmal
alle Token im gesamten Petrinetz".

00:28:12,420 --> 00:28:12,821
Im Petrinetz ist immer alles nur lokal.

00:28:12,821 --> 00:28:19,050
Was in Petrinetzen eher passiert, ist das, was
dem Flussende in Aktivitätsdiagrammen entspricht.

00:28:19,050 --> 00:28:23,970
Nämlich, das frisst sozusagen nur den
in es hineinlaufenden Kontrollfluss.

00:28:23,970 --> 00:28:30,900
Das entspräche einer Transition, die nur
eingehende, aber keine ausgehenden Kanten hat.

00:28:30,900 --> 00:28:34,710
Die frisst also Token, die hineinlaufen,
und gibt nichts weiter aus.

00:28:34,710 --> 00:28:38,760
Also, die frisst eben auch nur
lokal die Token an dieser Stelle

00:28:38,760 --> 00:28:44,760
und nicht irgendwie alle Token, die
im gesamten

00:28:44,760 --> 00:28:45,690
Petrinetz unterwegs sind.

00:28:45,690 --> 00:28:50,910
Das kommt immer auf das konkrete Beispiel an,

00:28:50,910 --> 00:28:54,960
ob es überhaupt einen Unterschied zwischen
diesen beiden möglichen Enden gibt.

00:28:54,960 --> 00:29:00,570
Also in dem Beispiel, das ich hier hatte, hatte
ich zwar dieses Aktivitätsende benutzt als Symbol.

00:29:00,570 --> 00:29:02,430
Ich hätte aber auch das Flussende nehmen können,

00:29:02,430 --> 00:29:08,460
denn hier in dem Beispiel ist es sowieso
so, dass nur ein Token unterwegs ist.

00:29:08,460 --> 00:29:10,440
Also es wird hier mal aufgespalten,
aber davor wieder verknüpft.

00:29:10,440 --> 00:29:18,420
Das heißt, wenn irgendwie ein Token hier unten
ankommt, dann kann auch im gesamten restlichen

00:29:18,420 --> 00:29:22,230
Aktivitätsdiagramm/Petrinetz nicht noch
irgendwo ein Token unterwegs sein.

00:29:22,230 --> 00:29:24,930
Also das ist sowieso das einzige
Token, das hier noch unterwegs

00:29:24,930 --> 00:29:32,580
ist. Und wenn das gefressen wird, ist
die Bearbeitung insgesamt zu Ende.

00:29:32,580 --> 00:29:35,370
In komplizierteren Situationen,

00:29:35,370 --> 00:29:40,260
wo es gleich mehrere Startknoten gab und
deswegen mehrere Token unterwegs sind,

00:29:40,260 --> 00:29:44,571
könnte es einen Unterschied machen, ob ich
das Aktivitätsende oder das Flussende habe.

00:29:44,571 --> 00:29:48,870
Aber wir werden in Aufgaben, die Sie bekommen, darauf
achten, dass Ihnen das nicht auf die Füße fällt,

00:29:48,870 --> 00:29:53,190
und der Unterschied Ihnen
irgendwie Probleme bereitet.

00:29:55,170 --> 00:29:56,670
Also in Beispielen, die wir betrachten werden,

00:29:56,670 --> 00:30:01,950
ist es immer eindeutig umsetzbar,
wie man das Ende beschreibt.

00:30:01,950 --> 00:30:09,030
Ausgehende Kanten sind weder aus dem
Aktivitätsende noch aus dem Flussende erlaubt,

00:30:09,030 --> 00:30:11,820
weil es ja gerade eben Positionen sein sollen,

00:30:11,820 --> 00:30:14,820
wo ein Fluss endet und nicht
irgendwie noch etwas weitergeht.

00:30:14,820 --> 00:30:20,940
O.k., wie wir das umsetzen,

00:30:20,940 --> 00:30:25,830
können wir direkt gleich mal in dem
Beispiel-Petrinetz sehen, für das Hausbau-Beispiel.

00:30:25,830 --> 00:30:32,310
Also, das war unser Hausbau-Aktivitätsdiagramm.

00:30:32,310 --> 00:30:36,450
Und wir haben jetzt tatsächlich für alle darin
vorkommenden Elemente prinzipiell gesehen,

00:30:36,450 --> 00:30:42,690
wie sie in Petrinetz-Bestandteile übersetzt werden
können, bis auf dieses etwas schwammige Ende.

00:30:42,690 --> 00:30:46,380
Da hatte ich gerade nur angedeutet,
das wird in der Regel irgendwie

00:30:46,380 --> 00:30:50,400
entweder eine Stelle sein, in der zwar ein Token
landet, aber es dann von da aus nicht weitergeht,

00:30:50,400 --> 00:30:53,910
oder eine Transition, die ein
Token frisst und nichts ausgibt.

00:30:53,910 --> 00:30:59,040
Und tatsächlich können wir das, was
ich auf den Zwischenfolien jetzt

00:30:59,040 --> 00:31:03,390
für einzelne Teile des
Aktivitätsdiagramms getan hatte,

00:31:03,390 --> 00:31:09,780
insgesamt zusammenbasteln und dann
ein Petrinetz erhalten, welches das

00:31:09,780 --> 00:31:14,250
gleiche Verhalten beschreibt, wie durch dieses
Aktivitätsdiagramm dargestellt werden sollte.

00:31:14,250 --> 00:31:19,230
Das wäre im Wesentlichen einfach ein
Zusammenbasteln der Bestandteile,

00:31:19,230 --> 00:31:23,430
die wir jetzt für einzelne Auszüge
auf den ganzen Folien gesehen haben.

224 # slide
00:31:23,430 --> 00:31:29,100
Und wenn wir das tun, entsteht dieses Petrinetz.

00:31:30,360 --> 00:31:34,680
Das hat schon eine sehr ähnliche
Form zu dem Aktivitätsdiagramm.

00:31:34,680 --> 00:31:37,710
Und tatsächlich kann man jetzt
hier den einzelnen Bestandteilen

00:31:38,400 --> 00:31:45,210
des Aktivitätsdiagramms jeweils entsprechende
Stellen und Transitionen im Petrinetz zuordnen.

00:31:45,210 --> 00:31:48,180
Ja, das ist hier der Beginn, der
Startknoten: eine Stelle mit einem Token.

00:31:48,180 --> 00:31:55,110
Dann sehen wir hier die einzelnen Transitionen,
welche den Aktionen hier entsprechen.

00:31:55,110 --> 00:31:58,920
Wir sehen etwa, an der Stelle hatten wir auch
motiviert, dass wir dazwischen eine Hilfsstelle

00:31:58,920 --> 00:32:03,510
brauchen, weil wir nicht direkt von
Transition zu Transition gehen können.

00:32:03,510 --> 00:32:08,890
Das entspricht dann also dieser Hilfsstelle.
Und auch die anderen Teile hier sind

00:32:08,890 --> 00:32:15,640
alle dadurch motiviert, wie wir einzelne
Aktivitätsdiagrammelemente übersetzen wollten.

00:32:15,640 --> 00:32:17,950
Also, das wurde eine Stelle,
das wurde eine Stelle,

00:32:19,480 --> 00:32:24,700
daraus wurde eine Transition mit zwei
ausgehenden Pfeilen zu Aktionsknoten.

00:32:24,700 --> 00:32:27,610
Da das Transitionen sind, kann
da keine direkte Verbindung sein.

00:32:27,610 --> 00:32:32,710
Sondern es muss eine Hilfsstelle eingeführt
werden, und genau das sehen wir hier.

00:32:32,710 --> 00:32:34,630
Also, das entspräche dem Gabelungsknoten.

00:32:34,630 --> 00:32:37,240
Das entspricht dem. Diese beiden Transitionen

00:32:37,240 --> 00:32:40,570
entsprechen den beiden Aktionen in
diesen beiden nebenläufigen Pfaden.

00:32:40,570 --> 00:32:43,060
Und dazwischen muss dann
eben eine Hilfsstelle sein.

00:32:43,060 --> 00:32:47,620
Und so gibt es einen Weg, von dem

00:32:47,620 --> 00:32:50,740
gesehenen Aktivitätsdiagramm
zu einem Petrinetz zu kommen.

00:32:50,740 --> 00:32:55,030
Und wir sehen auch: das Ende habe ich hier
umgesetzt, indem einfach hier die letzte Aktion,

00:32:55,030 --> 00:33:00,220
diese Transition, eine solche
verschluckende Transition ist,

00:33:00,220 --> 00:33:10,760
die eben dem entspricht, dass nach dem
Haus Fertigstellen nichts mehr passiert.

00:33:10,760 --> 00:33:13,610
Dieses Aktivitätsende hier habe
ich einfach dadurch realisiert,

00:33:13,610 --> 00:33:19,520
dass die Transition, die ich hier für diese
Aktion eingeführt habe, keine Ausgabe mehr hat.

00:33:19,520 --> 00:33:24,650
Das ist dann eben hier dargestellt.

00:33:24,650 --> 00:33:31,606
O.k., die meisten Stellen hier
sind wirklich solche Hilfsstellen.

00:33:31,606 --> 00:33:33,500
Sie sehen hier: die benannten
Elemente sind Elemente,

00:33:33,500 --> 00:33:35,270
die auch im Aktivitätsdiagramm auftraten.

00:33:35,270 --> 00:33:38,000
Insbesondere diese Stelle, die
einem Objektknoten entspricht.

00:33:38,000 --> 00:33:40,550
Die meisten anderen Stellen sind Hilfsstellen,

00:33:40,550 --> 00:33:43,850
die eingeführt wurden, damit das
ein legales Petrinetz ergibt.

00:33:43,850 --> 00:33:48,050
Es gibt im konkreten Fall
nur eine Hilfstransition.

00:33:48,050 --> 00:33:53,840
Das ist diese hier, die nötig war, damit ich
von dieser Stelle zu dieser Stelle kommen kann.

00:33:53,840 --> 00:33:59,000
Was ja im Aktivitätsdiagramm diesen

00:33:59,000 --> 00:34:02,840
beiden Elementen entsprach, wo es
dazwischen eben nichts weiter gibt,

00:34:02,840 --> 00:34:06,380
aber ich nicht direkt von Stelle
zu Stelle gehen darf im Petrinetz.

00:34:06,380 --> 00:34:15,820
O.k., und tatsächlich alles, was wir
intuitiv an dem Aktivitätsdiagramm

00:34:15,820 --> 00:34:23,020
an möglichen Schrittfolgen gesehen haben, das
wären genau alle gültigen Transitionsabfolgen,

00:34:23,020 --> 00:34:26,800
die gültiges Schalten in
diesem Petrinetz darstellen.

00:34:26,800 --> 00:34:29,740
Insofern modelliert dieses
Petrinetz genau das Gleiche

00:34:29,740 --> 00:34:32,350
wie das ursprünglich gesehene Aktivitätsdiagramm.

00:34:32,350 --> 00:34:36,760
Und das ist ein generelles Rezept, wie man aus
Aktivitätsdiagrammen Petrinetze erhalten kann.

00:34:36,760 --> 00:34:41,410
Solange nur Elemente vorkommen, die
wir besprochen haben, natürlich.

00:34:41,410 --> 00:34:47,350
Denn in der Tat gibt es in
Aktivitätsdiagrammen noch weitaus

00:34:47,350 --> 00:34:50,710
mehr Darstellungsmöglichkeiten,
die wir nicht alle einführen.

00:34:50,710 --> 00:34:52,900
Ich werde einige jetzt noch
ansprechen und erwähnen.

00:34:52,900 --> 00:35:00,220
Für die werde ich aber nicht jeweils immer
eine volle Übersetzung in Petrinetze angeben.

00:35:00,220 --> 00:35:05,920
Sie müssen dann natürlich auch in den Übungen oder
der Klausur nur die Art Aktivitätsdiagramme in

00:35:05,920 --> 00:35:09,430
Petrinetze übersetzen können, für die wir
das auch tatsächlich diskutiert haben.

00:35:09,430 --> 00:35:13,030
Also für die Elemente, die darin
vorkommen, für die ich hier Folien hatte.

00:35:13,030 --> 00:35:16,150
Aber was wären noch zusätzliche
Ausdrucksmöglichkeiten?

225 # slide
00:35:16,150 --> 00:35:21,730
Nun, in Aktivitätsdiagrammen in UML gibt
es einerseits noch weitere Anleihen aus

00:35:21,730 --> 00:35:25,570
Petrinetzen, andererseits eben einfach
eigene Darstellungsmöglichkeiten.

00:35:25,570 --> 00:35:31,360
Zum Beispiel kann man an Objektknoten angeben,
wie viele Objekte da maximal liegen dürfen.

00:35:31,360 --> 00:35:35,020
Und das ist natürlich etwas, was in
Petrinetzen der Kapazität entspricht.

00:35:35,020 --> 00:35:40,510
Also diese Notation 6 hier in einem
Petrinetz mit Kapazität entspricht eben

00:35:40,510 --> 00:35:44,170
auch der Information, dass hier nie
mehr als sechs Marken liegen können.

00:35:44,170 --> 00:35:45,880
Und das würde eben im Aktivitätsdiagramm

00:35:45,880 --> 00:35:49,360
so dargestellt, dass man hier
so eine obere Schranke angibt.

00:35:49,360 --> 00:35:53,770
O.k., also eine quantitative
Aussage an einem Objektknoten.

00:35:53,770 --> 00:35:59,620
Es gibt auch quantitative Aussagen an den
Übergängen. Da kann ein Gewicht dranstehen.

00:35:59,620 --> 00:36:04,420
Und das entspricht dann auch genau dem
Gewichtsbegriff in einem Petrinetz.

00:36:04,420 --> 00:36:08,380
Ja, also "upperBound" hier würde sagen,

00:36:08,380 --> 00:36:14,020
es können maximal sechs Gerichte
gleichzeitig hier als Reservoir vorliegen.

00:36:14,020 --> 00:36:18,400
Und das Gewicht würde sagen, es werden
immer gleichzeitig zwei Gerichte serviert.

00:36:18,400 --> 00:36:20,470
Im Petrinetz:

00:36:20,470 --> 00:36:21,970
Diese Stelle hat die Kapazität 6.

00:36:21,970 --> 00:36:25,720
Und diese
Verbindung hat Gewicht zwei.

00:36:28,120 --> 00:36:30,280
Das kam in dem bisher betrachteten Beispiel nicht

00:36:30,280 --> 00:36:37,540
vor, aber lässt sich auch auf
Konzepte aus Petrinetzen übertragen,

00:36:37,540 --> 00:36:40,570
insbesondere wenn wir Petrinetze
mit Kapazität betrachten.

00:36:40,570 --> 00:36:48,250
O.k., was Aktivitätsdiagramme erlauben,
was wir in Petrinetzen nicht hatten,

00:36:48,250 --> 00:36:51,340
war, dass es auch in solchen Situationen,

00:36:51,340 --> 00:36:56,140
wo hier zum Beispiel mehrere Marken abgelegt
werden und dann nach und nach entnommen werden,

00:36:56,140 --> 00:37:00,250
man beschreiben kann, in welcher
Reihenfolge das denn passiert.

00:37:00,250 --> 00:37:02,350
Das macht bei Petrinetzen keinen Sinn.

00:37:02,350 --> 00:37:04,450
Wenn hier sechs Marken liegen,

00:37:04,450 --> 00:37:08,740
dann ist mir vollkommen egal, welche von den
sechs Marken als nächstes serviert werden.

00:37:08,740 --> 00:37:14,770
Hingegen in einer Restaurantanwendung, wo
hier nach und nach sechs Gerichte abgelegt

00:37:14,770 --> 00:37:17,470
werden und auch fertig werden, ist
es ja vielleicht schon wichtig,

00:37:17,470 --> 00:37:19,660
welche von diesen sechs Gerichten
als nächstes serviert werden.

00:37:19,660 --> 00:37:24,640
Nämlich möglichst die, die am längsten
stehen, damit sie nicht noch kälter werden.

00:37:24,640 --> 00:37:27,400
Ja, da kann man also sozusagen eine
Reihenfolge von Objekten angeben.

00:37:27,400 --> 00:37:30,460
Das werden wir aber nicht weiter betrachten.

00:37:30,460 --> 00:37:32,020
Das sollten Sie nur wissen, dass es möglich ist.

00:37:32,020 --> 00:37:37,420
Aber das werden wir nicht weiter berücksichtigen,

00:37:37,420 --> 00:37:41,110
weil wir es auch auf Petrinetz-Seite
überhaupt nicht getan haben und da auch

00:37:41,110 --> 00:37:44,710
keinen großen Sinn ergeben würde, weil ja die
einzelnen Marken gar nicht unterscheidbar sind.

00:37:44,710 --> 00:37:50,740
Anders als konkrete Objekte in einem konkreten
Softwaremodellierungskontext vielleicht.

226 # slide
00:37:50,740 --> 00:37:53,890
O.k., also der Punkt hier ist:

00:37:53,890 --> 00:37:56,500
diese Entsprechung, die ist nicht völlig exakt.

00:37:56,500 --> 00:38:00,250
Ja, nicht für alle Konzepte aus Aktivitätsdiagrammen
gibt es eine direkte Übersetzung.

00:38:00,250 --> 00:38:01,600
Und das liegt natürlich auch daran,

00:38:01,600 --> 00:38:04,210
 dass Aktivitätsdiagramme
sowieso nur so semi-formal sind.

00:38:04,210 --> 00:38:07,780
Also es sind gar nicht alle Aspekte
darin vollständig spezifiziert

00:38:07,780 --> 00:38:14,995
in dem gleichen Sinne, wie Petrinetze
vollständig mathematisch modelliert waren.

00:38:14,995 --> 00:38:19,990
Aber für große Anteile von Aktivitätsdiagrammen
kann man eben so eine Übersetzung durchführen.

00:38:19,990 --> 00:38:25,690
Und nur solche werden wir dann
mit Ihnen auch in Aufgaben haben.

227 # slide
00:38:25,690 --> 00:38:30,920
O.k., was haben wir noch?

00:38:30,920 --> 00:38:31,880
Aktivitätsbereiche.

00:38:31,880 --> 00:38:41,630
Die sind sozusagen einfach eine Darstellung,
die in Petrinetzen auch nicht vorkommt.

00:38:41,630 --> 00:38:45,710
In Petrinetzen gibt es einfach Stellen,
Transitionen und Verbindungen dazwischen.

00:38:45,710 --> 00:38:47,780
In Aktivitätsdiagrammen

00:38:47,780 --> 00:38:51,620
strukturiert man unter Umständen
die Diagramme noch weiter.

00:38:51,620 --> 00:38:53,000
Man gruppiert Elemente.

00:38:53,000 --> 00:38:56,540
Zum Beispiel hier könnte man sich vorstellen,
wenn wir dieses Restaurantbeispiel haben,

00:38:56,540 --> 00:38:58,640
dann könnte es sozusagen
zwei Verantwortungsbereiche

00:38:58,640 --> 00:39:02,330
geben oder vielleicht eine räumliche
Verteilung: die Küche und den Gastraum.

00:39:02,330 --> 00:39:04,730
Und dann gibt es zum Beispiel hier Aktionen,

00:39:04,730 --> 00:39:07,880
die eben vom Gast durchgeführt werden, und
Aktionen, die vom Kellner durchgeführt werden.

00:39:07,880 --> 00:39:13,130
Und dann kann man diese Darstellung mit solch
einer Zerlegung der Ebene in mehrere Bereiche

00:39:13,130 --> 00:39:18,380
nutzen, denen dann eben diese Elemente zugeordnet
werden, um diese Verantwortlichkeiten auszudrücken.

00:39:18,380 --> 00:39:22,220
Also die Aktionen, die hier stattfinden,
sind genau "Gericht bestellen",

00:39:22,220 --> 00:39:25,100
"Bestellung aufnehmen", "Gericht
servieren", "Gericht verspeisen".

00:39:25,100 --> 00:39:29,810
Daran ändert diese Darstellung hier
nichts, aber sie macht eben für den Leser

00:39:29,810 --> 00:39:34,730
dieses Diagramms klarer, welche Aktionen denn
konzeptionell von wem durchgeführt werden.

00:39:36,920 --> 00:39:39,080
Und da gibt es mehrere
Möglichkeiten, wie das sein kann.

00:39:39,080 --> 00:39:40,280
Das könnte auch hin und her gehen.

00:39:40,280 --> 00:39:45,080
Es gibt auch die Möglichkeit, etwa auf
dieser Grenze Objektknoten anzulegen,

00:39:45,080 --> 00:39:49,820
wo dann die Intuition ist, dass da
sozusagen eine Übergabe ausgedrückt wird,

00:39:49,820 --> 00:39:51,980
von einem Bereich in den anderen.

00:39:51,980 --> 00:39:54,830
Aber das taucht in dem
Beispiel jetzt hier nicht auf,

00:39:54,830 --> 00:39:57,860
und schon gar nicht taucht es
in unserem Hausbau-Beispiel auf.

00:39:57,860 --> 00:40:00,107
Da hatten wir diese Art Strukturierung nicht.

00:40:00,107 --> 00:40:07,790
Es ist also mehr eine Art Dokumentation,
wer für welche Aktion verantwortlich ist.

00:40:07,790 --> 00:40:11,750
An der Reihenfolge des Schaltens oder
welche Schaltvorgänge möglich sind,

00:40:11,750 --> 00:40:13,970
welche Aktionsfolgen möglich
sind, ändert das nichts.

00:40:13,970 --> 00:40:18,230
Es hat wenig Einfluss auf die Semantik
des Aktivitätsdiagramms oder auf

00:40:18,230 --> 00:40:21,560
die Schaltfolgen in einem übersetzten Petrinetz.

228 # slide
00:40:21,560 --> 00:40:30,140
O.k., und dann gibt es noch
diverse weitere Elemente,

00:40:30,140 --> 00:40:32,750
die ich Ihnen nicht mal zeige,
die wir nicht weiter besprechen.

00:40:32,750 --> 00:40:36,980
Da könnten Sie sich einfach aus
der Literatur schlau machen.

00:40:36,980 --> 00:40:40,520
Müssen Sie für diese Vorlesung aber nicht,
weil wir diese Sachen nicht betrachten.

00:40:40,520 --> 00:40:45,680
Es gibt diverse weitere Elemente, die
jeweils ihre eigene Darstellung haben,

00:40:45,680 --> 00:40:49,910
die in unseren Beispielen nicht auftraten
und auch nicht auftreten werden.

00:40:49,910 --> 00:40:56,660
Das ist nur so als eine Aufzählung nochmal, damit
Ihnen klar ist, dass UML-Aktivitätsdiagramme

00:40:56,660 --> 00:41:01,460
noch mehr Variantenreichtum haben,
als wir hier schon gesehen haben.

00:41:01,460 --> 00:41:06,020
Und auf jeden Fall mehr als Petrinetze,
wo es ja nur Stellen und Transitionen gab.
