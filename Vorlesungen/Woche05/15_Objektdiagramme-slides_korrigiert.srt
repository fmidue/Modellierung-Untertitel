115 # slide
00:00:01,440 --> 00:00:08,910
Nachdem wir uns mit Klassendiagrammen beschäftigt
haben und insbesondere auch mit der Validität von

00:00:08,910 --> 00:00:14,070
Klassendiagrammen (also den Einschränkungen,
die bei Klassendiagrammen existieren, wenn man

00:00:14,070 --> 00:00:17,940
die verschiedenen Beziehungen betrachtet),
kommen wir nun zu den Objektdiagrammen.

00:00:17,940 --> 00:00:22,410
Also offenbar der Angabe von einzelnen Objekten.

00:00:22,410 --> 00:00:26,040
Ein Objekt, das wissen wir, ist
eine Ausprägung einer Klasse.

00:00:26,040 --> 00:00:33,180
Und was Sie hier sehen, ist eine Folie, die Sie
so ähnlich oder genauso schon gesehen haben.

00:00:33,180 --> 00:00:37,080
Also, wir haben eine Klasse, und dann haben wir
diskutiert (und auch in der Übung kam das vor),

00:00:37,080 --> 00:00:42,630
wann denn ein Objekt eine Ausprägung davon
ist (also diese Klasse instanziiert).

00:00:42,630 --> 00:00:43,800
Zur Erinnerung:

00:00:43,800 --> 00:00:47,160
Dabei mussten insbesondere
alle Attribute belegt werden.

00:00:47,160 --> 00:00:50,790
Falls das eine Unterklasse
einer anderen Klasse war,

00:00:50,790 --> 00:00:55,230
dann würden auch die Attribute der
Oberklasse hier mit auftauchen.

00:00:55,230 --> 00:00:57,930
Was hingegen nicht auftaucht, sind die Methoden.

00:00:57,930 --> 00:01:02,700
Weil die in einem Objekt
nichts zu suchen haben (bei

00:01:02,700 --> 00:01:04,110
dieser Art der Modellierung,
die wir hier machen).

00:01:06,120 --> 00:01:07,740
Das wäre ein Objekt.

00:01:07,740 --> 00:01:10,470
Ein Objektdiagramm ist dann
offenkundig ein Diagramm,

00:01:10,470 --> 00:01:15,030
in dem mehrere solcher Objekte vorkommen, die
möglicherweise in Beziehung zueinander stehen.

00:01:15,030 --> 00:01:18,300
Wobei die Beziehungen, die
dort bestehen sollen/können,

00:01:18,870 --> 00:01:20,340
von einem Klassendiagramm abhängen würden.

00:01:20,340 --> 00:01:24,750
Also, man muss ein gültiges Klassendiagramm
haben und kann dann darüber sprechen,

00:01:24,750 --> 00:01:29,850
dass ein Objektdiagramm zu diesem
Klassendiagramm erstellt wird.

00:01:29,850 --> 00:01:32,940
Dabei ist die Idee:

00:01:32,940 --> 00:01:39,960
Wenn das Klassendiagramm den Rahmen steckt, wie
ein System gestaltet sein kann, dann wäre ein

00:01:39,960 --> 00:01:44,610
Objektdiagramm eine Art Momentaufnahme oder
ein Snapshot des Systems zu einem Zeitpunkt.

00:01:44,610 --> 00:01:48,360
Also, eine Menge von Objekten mit ihren
Beziehungen zueinander, so wie sie zu einem

00:01:48,360 --> 00:01:49,920
bestimmten Zeitpunkt in einem System vorhanden
sein könnten, das dem Klassendiagramm genügt.

00:01:49,920 --> 00:01:57,480
In einem Klassendiagramm wurde festgehalten,
welche Arten von Akteuren es geben soll,

00:01:57,480 --> 00:02:01,890
welche Attribute bestehen, wie
die Klassen zusammenhängen.

00:02:02,580 --> 00:02:05,880
Ein Objektdiagramm muss dann
eine konkrete Ausprägung davon

00:02:05,880 --> 00:02:09,720
sein (die sich natürlich an alles hält,
was im Klassendiagramm modelliert wurde).

00:02:11,970 --> 00:02:15,420
Der Sinn ist, dass wir dann eine übersichtliche

00:02:15,420 --> 00:02:21,840
Zuordnung zum Beispiel der verschiedenen
Assoziationen und der Eigenschaften haben.

00:02:21,840 --> 00:02:23,670
Die Multiplizitäten müssen
etwa eingehalten werden.

00:02:23,670 --> 00:02:27,480
Also, wir müssen alles, was
das Klassendiagramm vorgibt,

00:02:27,480 --> 00:02:29,580
auch in einem entsprechenden
Objektdiagramm erfüllen.

00:02:29,580 --> 00:02:36,330
Dabei kriegen die Objekte Namen.

00:02:36,330 --> 00:02:41,520
Wir haben hier vielleicht eine Klasse "Point"
und dann mehrere einzelne Punkte, hier "myPoint".

00:02:42,570 --> 00:02:45,240
Man könnte hier auch "myPoint1"
oder "myPoint2" haben.

00:02:45,240 --> 00:02:54,495
Also, die Objekte haben eine Identität, die
durch einen Namen dargestellt werden kann.

00:02:54,495 --> 00:02:56,790
Aber ein Objekt könnte auch anonym bleiben.

00:02:56,790 --> 00:02:59,880
Manchmal wird einfach der Namensteil weggelassen,

00:03:00,630 --> 00:03:04,080
wenn es zu dem Objekt nicht wichtig
ist, dass es einen Namen hat.

00:03:04,080 --> 00:03:08,250
Die Klasse muss aber angegeben sein, damit wir
wissen, von welcher Klasse dieses Objekt denn ist.

00:03:08,250 --> 00:03:11,340
Dann würde man als Angabe einfach so etwas haben,

00:03:11,340 --> 00:03:15,870
und sagen: "Objekt der Klasse Point"; und
davor stände aber kein konkreter Name.

00:03:15,870 --> 00:03:19,080
So dass dieses Objekt keinen Eigennamen hätte,

00:03:19,080 --> 00:03:21,900
sondern einfach ein anonymes Objekt
der entsprechenden Klasse bliebe.

00:03:21,900 --> 00:03:26,310
Die Klassen selbst werden wir im
Objektdiagramm nicht mit abbilden.

00:03:26,310 --> 00:03:30,780
Wir werden separat ein Klassendiagramm haben
und dann ein dazu passendes Objektdiagramm.

00:03:30,780 --> 00:03:34,710
Also nicht die Situation, wo beides in einem
digramm steht mit diesen Extrapfeilen.

00:03:34,710 --> 00:03:36,060
Das werden wir hier nicht tun.

00:03:36,060 --> 00:03:39,510
Das kann man machen, aber das wird
in unseren Aufgaben nicht vorkommen.

00:03:39,510 --> 00:03:48,210
Dann hatte ich eben gesagt, dass wir
in den Objekten die Attribute belegen,

00:03:48,210 --> 00:03:49,410
die durch die Klassen vorgegeben sind.

00:03:49,410 --> 00:03:52,530
UML verlangt das nicht unbedingt immer.

00:03:52,530 --> 00:04:01,020
Also, UML lässt auch zu, dass wir von einem Objekt
nicht alle Attribute belegen, weil vielleicht für

00:04:01,020 --> 00:04:04,650
die konkrete Situation, die dargestellt werden
soll, nicht alle Attribute relevant sind.

00:04:04,650 --> 00:04:08,670
Etwas anderes gilt natürlich, wenn wir
fordern (etwa in der Übung oder Klausur),

00:04:08,670 --> 00:04:11,520
dass Sie eine vollständige
Instanziierung machen sollen.

00:04:11,520 --> 00:04:13,470
Dass Sie also alle Attribute,

00:04:13,470 --> 00:04:18,480
die per Klassendefinition vorgeben
sind, im Objekt auch belegen sollen.

00:04:18,480 --> 00:04:21,410
Wenn man von dieser Forderung
Abstand nimmt (also das nicht

00:04:21,410 --> 00:04:24,140
explizit fordert, wie wir das vielleicht
tun werden in der Übung oder Klausur),

00:04:24,140 --> 00:04:29,180
dann könnte man durchaus auch Ausprägungen
abstrakter Klassen im Objektdiagramm darstellen.

00:04:29,180 --> 00:04:32,120
Obwohl ich in der vergangenen Woche gesagt hatte,

00:04:32,120 --> 00:04:41,095
dass man von abstrakten Klassen in einer konkreten
Implementierung keine Objekte instanziieren kann.

00:04:41,095 --> 00:04:42,530
Für so eine Darstellung des Objektdiagramms
wäre es prinzipiell auch möglich,

00:04:42,530 --> 00:04:46,880
von einer abstrakten Klasse
eine Ausprägung zu bilden.

00:04:46,880 --> 00:04:57,260
Natürlich unter den Umständen eben, dass nicht
alle Attribute belegt sind (was notwendig wäre,

00:04:58,640 --> 00:05:05,270
wenn wir denn von einer konkreten Unterklasse
der abstrakten Klasse Objekte angeben würden).

00:05:09,980 --> 00:05:10,910
Und ganz wichtig:

00:05:10,910 --> 00:05:14,600
Es gibt keine Vererbungspfeile zwischen Objekten.

00:05:14,600 --> 00:05:18,260
Wir werden gleich sehen, wie die anderen
Beziehungen, die es auf Klassenebene gibt

00:05:18,260 --> 00:05:27,050
(Assoziation, Aggregation, Komposition),
sich im Objektdiagramm wiederfinden.

00:05:27,050 --> 00:05:28,550
Die Vererbungspfeile zwischen Klassen
im Klassendiagramm haben hingegen keine

00:05:28,550 --> 00:05:31,430
Entsprechung im Objektdiagramm, weil
wir da konkrete Objekte angeben.

00:05:31,430 --> 00:05:32,900
Ein Objekt gehört dann zu einer konkreten Klasse.

00:05:32,900 --> 00:05:36,380
Das kann eine Klasse aus einer
Klassenhierarchie mit mehreren Vererbungen sein.

00:05:36,380 --> 00:05:38,360
Aber dieses eine Objekt, das wir abbilden,

00:05:38,360 --> 00:05:42,080
gehört zu *einer* Klasse und erbt
*nicht* von einem anderen Objekt.

00:05:42,080 --> 00:05:45,050
Sondern es gehört zu einer Klasse, die
vielleicht von anderen Klassen erbt.

00:05:45,050 --> 00:05:48,860
Die Vererbungspfeile, die es zwischen den
Klassen gibt, gibt es zwischen Objekten nicht.

00:05:54,530 --> 00:05:59,870
Wegen der Konzepte von Vererbung,
Oberklassen, Unterklassen,

00:05:59,870 --> 00:06:04,130
könnte bei Objekten prinzipiell
auch eine Oberklasse angegeben sein.

00:06:05,270 --> 00:06:08,450
Wenn wir uns an die "Points" und an
die "ColouredPoints" erinnern, dann

00:06:08,450 --> 00:06:10,550
könnten wir einen konkreten
"ColouredPoint" haben.

00:06:10,550 --> 00:06:12,680
Also ein konkretes Objekt
der Klasse "ColouredPoint".

00:06:12,680 --> 00:06:15,170
Das ist ja auch ein Objekt der Klasse "Point".

00:06:15,170 --> 00:06:20,540
Deswegen dürfte in dieser Angabe auch eine
Oberklasse angegeben sein, wenn wir das nicht

00:06:20,540 --> 00:06:25,580
in der Übung oder der Klausur wieder präziser
haben wollen oder explizit ausschließen.

00:06:30,590 --> 00:06:33,140
Ich hatte schon davon gesprochen,
dass wir die Vererbungspfeile

00:06:33,140 --> 00:06:36,740
nicht wiederfinden im Objektdiagramm,
hingegen die anderen Beziehungen schon.

00:06:36,740 --> 00:06:39,620
Wie finden die sich im Objektdiagramm wieder?

00:06:39,620 --> 00:06:47,150
Mittels des Begriffs des "Links", was
einfach auch eine Verknüpfung ist,

00:06:47,150 --> 00:06:50,480
aber jetzt irgendeine
Beziehung zwischen Objekten.

00:06:52,400 --> 00:06:56,450
Wenn wir auf Klassenebene eine Assoziation haben,
oder eine Aggregation, oder eine Komposition,

00:06:56,450 --> 00:07:02,360
dann kann die sich auf Ebene der Objekte
entsprechender Klassen wiederfinden durch

00:07:02,360 --> 00:07:05,240
letztlich einfach eine Verbindungslinie,
einen Link, eine Verknüpfung.

00:07:05,240 --> 00:07:10,940
Das sind dann also ganz konkrete Ausprägungen
einer solchen Beziehung spezifischer Objekte

00:07:10,940 --> 00:07:16,520
der in die auf Klassenebene bestehenden
Beziehung involvierten Klassen.

00:07:16,520 --> 00:07:23,780
An die Links kommen keine Multiplizitäten dran.

00:07:23,780 --> 00:07:26,960
Denn die Multiplizitäten im
Klassendiagramm sagen ja,

00:07:26,960 --> 00:07:33,140
wie viele Objekte dieser oder jener Art an
so einer Beziehung beteiligt sein können.

00:07:33,140 --> 00:07:35,840
Im Objektdiagramm haben wir
immer ganz konkrete Objekte.

00:07:35,840 --> 00:07:43,460
Also ein Link repräsentiert genau eine
Beziehung zwischen zwei konkreten Objekten.

00:07:43,460 --> 00:07:49,970
Und obwohl das eine Ausprägung einer
Assoziation mit Multiplizitäten sein mag,

00:07:49,970 --> 00:07:53,030
werden diese Multiplizitäten an
diesem Link nicht dranstehen.

00:07:53,030 --> 00:07:56,090
Sie müssen natürlich dennoch eingehalten werden.

00:07:56,090 --> 00:08:02,610
Also man sieht nicht an einem konkreten Link,
welche Multiplizitäten dort vorherrschen.

00:08:02,610 --> 00:08:04,200
Denn das ist ein Konzept auf Klassenebene.

00:08:04,200 --> 00:08:07,170
Aber wenn wir uns das gesamte
Objektdiagramm anschauen,

00:08:07,170 --> 00:08:11,250
dann muss es natürlich die Multiplizitäten
aus dem Klassendiagramm erfüllen.

00:08:11,250 --> 00:08:13,140
Ist also im Klassendiagramm
vorgegeben: "Es stehen

00:08:13,140 --> 00:08:18,780
Objekte der Klasse A mit maximal zwei
Objekten der Klasse B in Beziehung",

00:08:18,780 --> 00:08:23,520
dann dürfen wir eben nicht im Objektdiagramm
ein Objekt der Klasse A und drei Objekte der

00:08:23,520 --> 00:08:27,450
Klasse B haben, so dass dieses A-Objekt mit
allen drei B-Objekten in Beziehung steht.

00:08:28,350 --> 00:08:33,660
Letztlich müssen die Multiplizitätsbedingungen
des Klassendiagramms eingehalten werden.

00:08:33,660 --> 00:08:35,790
Das heißt, die Anzahlen der Objekte,
die in Beziehung zueinander stehen,

00:08:35,790 --> 00:08:37,590
müssen innerhalb der jeweiligen Schranken sein.

00:08:37,590 --> 00:08:40,740
Aber es steht nicht an jedem Link
irgendwie auch so eine Nummer dran.

00:08:40,740 --> 00:08:45,690
Denn diese Nummern überspannen alle Links.

00:08:45,690 --> 00:08:48,660
Das ist eine Forderung an alle Links,

00:08:48,660 --> 00:08:54,360
die es zwischen Objekten der einen
und Objekten der anderen Klasse gibt.

00:08:54,360 --> 00:08:58,950
Wir werden gleich in dem Beispiel
wiederfinden, wie das zu verstehen ist.

00:09:03,090 --> 00:09:06,330
Nehmen wir da ein Beispiel,
das wir schon einmal hatten,

00:09:06,330 --> 00:09:09,330
und erweitern es noch ein wenig
bzw. bauen zwei Beispiele zusammen.

00:09:09,330 --> 00:09:11,700
Wir hatten einmal das Beispiel
mit Parkplatz und Autos.

00:09:11,700 --> 00:09:15,570
Dann hatten wir irgendwann auch eine
Situation mit Autos und Besitzern,

00:09:15,570 --> 00:09:24,540
und auf den Whiteboard-Folien hatte ich auch
mal Auto und Räder in Beziehung gesetzt.

00:09:24,540 --> 00:09:27,540
Jeweils immer diese zwei Paare von Klassen.

00:09:28,140 --> 00:09:31,470
Packen wir das mal in ein größeres,
erweitertes Klassendiagramm, wo wir

00:09:31,470 --> 00:09:36,540
also den Parkplatz haben mit einer Aggregation
zu Auto mit entsprechenden Multiplizitäten hier.

00:09:36,540 --> 00:09:43,050
Und das Auto hat eine Komposition zu Rad,
auch wieder mit bestimmten Multiplizitäten.

00:09:43,050 --> 00:09:47,580
Abweichend von dem Beispiel, das
ich am Whiteboard betrachtet hatte,

00:09:47,580 --> 00:09:51,780
habe ich hier wirklich an
der Komposition die 1 stehen.

00:09:52,500 --> 00:09:54,510
In dem anderen Beispiel hatte
ich gesagt, ein Rad könnte auch

00:09:54,510 --> 00:09:56,460
im Lager sein, dann eben in keinem Auto.

00:09:57,480 --> 00:09:59,070
Hier ist es jetzt mal spezifischer.

00:09:59,070 --> 00:10:01,410
Also es gibt genau diese eine Komposition hier,

00:10:01,410 --> 00:10:06,480
und es gibt noch die Besitztumsverhältnisse,
also eine Assoziation von Person zu Auto.

00:10:06,480 --> 00:10:11,370
Jetzt haben wir also drei
verschiedene Arten von Beziehungen.

00:10:11,370 --> 00:10:14,130
Wir haben jetzt in diesem
Beispiel keine Vererbung.

00:10:14,130 --> 00:10:16,230
Natürlich können wir auch von Klassendiagrammen,

00:10:16,230 --> 00:10:18,750
die Vererbungen enthalten,
Objektdiagramme erstellen.

00:10:18,750 --> 00:10:20,040
Dann müssen wir vor allem daran denken,

00:10:20,040 --> 00:10:28,680
dass die Unterklassen neben den Attributen auch
all ihre Beziehungen von den Oberklassen erben.

00:10:32,700 --> 00:10:35,220
Also das ist ein mögliches Klassendiagramm.

00:10:35,220 --> 00:10:42,600
Jetzt können wir mal schauen, wie ein
Objektdiagramm dazu aussehen könnte.

00:10:42,600 --> 00:10:45,000
Wir müssen uns entscheiden, wie
viele Autos wir haben wollen.

00:10:45,000 --> 00:10:47,640
Nehmen wir mindestens zwei, denn mit
nur einem Auto wäre es langweilig.

00:10:47,640 --> 00:10:50,280
Nehmen wir zwei Autos, die es geben soll.

00:10:50,280 --> 00:10:51,990
Dann wissen wir schon:

00:10:51,990 --> 00:10:55,140
Jedes Auto kann auf null
oder einem Parkplatz stehen.

00:10:55,140 --> 00:11:01,290
Sagen wir mal, es gibt einen Parkplatz, auf
dem zufälligerweise diese beiden Autos stehen.

00:11:02,310 --> 00:11:02,670
Wir wissen auch:

00:11:02,670 --> 00:11:09,630
Jedes Auto hat genau vier Räder, und
kein Rad kann zu zwei Autos gehören.

00:11:09,630 --> 00:11:12,420
Das heißt, wenn wir zwei Autos haben, werden wir
als weitere Objekte wohl genau acht Räder haben.

00:11:13,020 --> 00:11:18,630
Und dann muss jedes Auto auch noch einen
Besitzer haben, und zwar genau einen.

00:11:18,630 --> 00:11:25,350
Ein Besitzer kann allerdings mehrere
Autos besitzen, zum Beispiel bis zu fünf.

00:11:28,830 --> 00:11:32,480
Also wie könnte ein konkretes Objektdiagramm
zu diesem Klassendiagramm aussehen?

00:11:32,480 --> 00:11:33,770
Zum Beispiel wie folgt:

00:11:33,770 --> 00:11:36,290
Das ist die Situation, die wir hatten.

00:11:36,290 --> 00:11:39,440
Hier ist zum Beispiel als
Objekt ein konkreter Parkplatz,

00:11:39,440 --> 00:11:43,010
nämlich der im L-Bereich des Campus in Duisburg.

00:11:43,010 --> 00:11:49,790
Das wäre "Name-des-Objektes ist
Objekt der Klasse Parkplatz".

00:11:49,790 --> 00:11:51,770
Was ich hier jetzt im Beispiel mal getan habe,

00:11:52,280 --> 00:11:56,540
ist, dass ich überall die
Attributkästen weggelassen habe.

00:11:57,170 --> 00:11:58,370
Eigentlich würden ja für alle Attribute,

00:11:58,370 --> 00:12:05,690
die hier jeweils im zweiten Kasten genannt
sind, auch hier noch Belegungen kommen.

00:12:05,690 --> 00:12:07,760
Das werden wir auch in den
Übungen manchmal haben,

00:12:07,760 --> 00:12:14,330
dass wir die Objekte und teils auch die Klassen
so stilisieren, dass wir tatsächlich nur den

00:12:14,330 --> 00:12:21,710
Kasten mit dem Namen haben und nicht auch noch
die beiden Boxen für Attribute und Methoden.

00:12:21,710 --> 00:12:24,050
Also dieser eine Parkplatz.

00:12:24,050 --> 00:12:28,520
Dann hatte ich von zwei Autos gesprochen, zum
Beispiel ein grüner Skoda und ein schwarzer Ford.

00:12:28,520 --> 00:12:32,330
Das sind jeweils Autos als verschiedene
Ausprägungen der Klasse Auto,

00:12:32,330 --> 00:12:37,130
und die sind beide auf diesem
einen Parkplatz enthalten.

00:12:37,130 --> 00:12:42,230
Also diese beiden Links hier sind
Ausprägungen dieser einen Beziehung.

00:12:50,090 --> 00:13:00,260
Dann gibt es jeweils einen Besitzer,
also Ausprägungen dieser Klasse.

00:13:00,260 --> 00:13:03,170
Das sind diese beiden
Personen-Objekte hier, Peter und Gabi.

00:13:03,170 --> 00:13:09,620
Es könnte auch nur ein Besitzer sein.

00:13:09,620 --> 00:13:15,290
Es könnte auch von Gabi aus ein weiterer
Link zu dem grünen Skoda bestehen.

00:13:15,290 --> 00:13:20,060
Dann müsste allerdings dieses Objekt,
bzw. diese Beziehung hier, verschwinden.

00:13:20,060 --> 00:13:24,110
Denn Gabi und Peter können nicht
beide Besitzer des grünen Skodas sein.

00:13:24,110 --> 00:13:26,600
Weil jedes Auto nur genau einen Besitzer hat.

00:13:30,410 --> 00:13:31,610
Dann gibt es noch diese Beziehung hier.

00:13:31,610 --> 00:13:35,960
Zu jedem Auto gehören genau vier Räder,
deswegen haben wir hier jeweils vier Räder.

00:13:35,960 --> 00:13:40,730
Die habe ich einfach mal als
anonyme Objekte gelassen.

00:13:40,730 --> 00:13:45,200
Das sind vier verschiedene Räder, aber die werden
nicht extra noch durch Namen unterschieden.

00:13:45,200 --> 00:13:47,060
Dennoch sind es auf jeden Fall
vier und hier nochmals vier,

00:13:47,060 --> 00:13:48,710
also insgesamt acht verschiedene Objekte.

00:13:48,710 --> 00:13:53,330
Die sind jetzt eben nur nicht noch benannt wie
"vorderes linkes Rad des grünen Skodas" oder so.

00:13:53,330 --> 00:13:55,310
Hier sehen wir auch wieder:

00:13:55,310 --> 00:14:02,420
Für jede Inkarnation der
Komposition gibt es einen Link.

00:14:02,420 --> 00:14:06,680
Der grüne Skoda hat Links zu genau vier
Rädern, und der schwarze Ford auch.

00:14:06,680 --> 00:14:14,510
Und die haben jeweils genau einen
Link zu dem sie enthaltenden Auto.

00:14:14,510 --> 00:14:18,560
Das genügt also diesen Multiplizitäten hier.

00:14:18,560 --> 00:14:20,660
Die stehen aber an den Links selber nicht dran,

00:14:20,660 --> 00:14:22,520
weil das für einen einzelnen
Link keinen Sinn ergibt.

00:14:22,520 --> 00:14:31,580
Wichtig ist, dass zum Beispiel diese vier Links
zusammen diesen Einschränkungen hier genügen,

00:14:31,580 --> 00:14:36,950
die sich aus der Komposition hier mit den
entsprechenden Multiplizitäten ergeben.

00:14:38,810 --> 00:14:43,280
Wenn wir jetzt anfangen würden, Objekte
zu löschen oder Links zu löschen oder

00:14:43,280 --> 00:14:45,920
weitere Objekte hinzuzufügen,
könnten wir uns immer fragen:

00:14:45,920 --> 00:14:48,710
Genügt es denn noch diesem Klassendiagramm?

00:14:48,710 --> 00:14:51,320
Wenn ich hier ein fünftes Rad angebe,

00:14:51,320 --> 00:14:54,680
und es auch noch mit dem grünen Skoda
verbinde, dann hätte ich eine Verletzung.

00:14:54,680 --> 00:14:58,400
Weil ich dann dem grünen Skoda fünf
Räder zugeordnet hätte, was verboten ist.

00:14:58,400 --> 00:15:01,580
Wenn ich ein Rad hinzufügen würde, ohne
es mit irgendeinem Auto zu verbinden,

00:15:01,580 --> 00:15:03,870
hätte ich das Klassendiagramm auch verletzt.

00:15:03,870 --> 00:15:09,180
Denn zu diesem Rad gäbe es dann nicht
das genau eine Auto, das es enthält.

00:15:09,180 --> 00:15:09,480
Welches es aber entsprechend
dieser Angabe hier geben muss.

00:15:09,480 --> 00:15:15,990
Das ist natürlich nicht das
einzige passende Objektdiagramm.

00:15:15,990 --> 00:15:20,970
Aber viele Änderungen, die wir jetzt lokal machen
könnten, würden das Klassendiagramm verletzen.

00:15:20,970 --> 00:15:24,900
Es gibt aber auch andere Objektdiagramme, die
ebenfalls zu diesem Klassendiagramm passen.

00:15:25,590 --> 00:15:29,970
Eine Aufgabe in den Übungen oder auch der
Klausur könnte sein, zu einem Klassendiagramm

00:15:29,970 --> 00:15:34,140
und einem Objektdiagramm zu entscheiden, ob dieses
Objektdiagramm zu diesem Klassendiagramm passt.

00:15:34,140 --> 00:15:38,370
Oder zu einem Klassendiagramm ein
Objektdiagramm bestimmter Größe aufzustellen.

00:15:43,920 --> 00:15:46,890
Noch zwei Anmerkungen:

00:15:48,270 --> 00:15:51,810
Wir könnten durchaus, auch wenn
ich es in dem Beispiel eben

00:15:51,810 --> 00:15:57,570
nicht getan habe, auch die Aggregations- und
Kompositionssymbole im Objektdiagramm notieren.

00:15:57,570 --> 00:16:05,040
Da diese vier Links Ausprägungen dieser
Komposition sind, könnte man auch an diesen

00:16:05,040 --> 00:16:10,140
vier Stellen hier, und natürlich auch hier unten,
jeweils diesen ausgefüllten Diamanten zeichnen.

00:16:10,140 --> 00:16:11,310
Man muss das aber nicht.

00:16:11,310 --> 00:16:18,990
Genauso kann man auf den
Assoziationsnamen verzichten.

00:16:18,990 --> 00:16:21,570
Hier habe ich das der Klarheit
halber gemacht, damit man weiß,

00:16:21,570 --> 00:16:23,280
was diese beiden Verbindungen sind.

00:16:23,280 --> 00:16:26,760
Es ist nicht unbedingt Pflicht,
die dorthin zu schreiben.

00:16:26,760 --> 00:16:29,430
Das macht man vor allem der
Übersichtlichkeit halber.

00:16:30,540 --> 00:16:37,650
Was jetzt hier vielleicht nicht notwendig war,
weil sowieso genau vier Räder dazugehören.

00:16:37,650 --> 00:16:44,970
Da gab es keinen Bedarf,
noch stärker hervorzuheben,

00:16:44,970 --> 00:16:48,930
dass die über das Kompositionssymbol dazugehören.

00:16:48,930 --> 00:16:50,970
Oder einen Namen dranzuschreiben.

00:16:52,080 --> 00:16:52,830
Hier gibt es den Namen.

00:16:52,830 --> 00:16:57,180
Den hätte man auch noch an diese vier Stellen
schreiben können, muss man aber nicht.

00:16:57,180 --> 00:17:06,260
Das Gleiche gilt für Leserichtung
und Navigationsrichtung.

00:17:06,890 --> 00:17:07,831
Das steht hier:

00:17:07,831 --> 00:17:10,209
Assoziationsnamen, Navigations- und
Leserichtung können auch weggelassen werden.

00:17:10,209 --> 00:17:14,240
Wir werden auch Objektdiagramme haben, wo
einfach nur die Links eingezeichnet sind

00:17:14,240 --> 00:17:17,120
ohne irgendwelche weiteren Annotationen daran.

00:17:29,540 --> 00:17:33,020
Diese "Achtung"-Meldung hatte
ich schon ausgesprochen:

00:17:33,020 --> 00:17:38,330
Wir müssen natürlich daran denken, wenn
wir ein Objektdiagramm angeben oder die

00:17:38,330 --> 00:17:43,970
Passung zu einem Klassendiagramm überprüfen,
dass Beziehungen (also Assoziationen,

00:17:43,970 --> 00:17:47,210
Aggregationen, Kompositionen)
zwischen Klassen vererbt werden.

00:17:48,050 --> 00:17:54,380
Wenn eine Klasse Beziehungen dieser Art zu
einer anderen Klasse hat, dann liegen die

00:17:54,380 --> 00:17:58,520
auch in der Unterklasse vor, müssen also bei
Objekten der Unterklasse berücksichtigt werden.

00:17:58,520 --> 00:18:00,140
Beispiel:

00:18:01,070 --> 00:18:03,560
Nehmen wir an, wir haben eine Klasse
Konto und davon zwei Unterklassen,

00:18:03,560 --> 00:18:06,530
und wir haben eine Beziehung
von Kunden zu Konten.

00:18:07,370 --> 00:18:11,960
Jedes Konto muss insbesondere genau einen
Besitzer haben, einen Kunden, der es besitzt.

00:18:11,960 --> 00:18:17,210
Dann müssen eben auch Sparkonten und
Girokonten jeweils genau einen Besitzer

00:18:17,210 --> 00:18:20,570
haben, obwohl es von diesen keine
explizite Beziehung zu Kunden gibt.

00:18:21,860 --> 00:18:26,270
Sie erben das, weil sie
Unterklassen von Konto sind.

00:18:26,270 --> 00:18:36,610
Das heißt, ein Objektdiagramm könnte so aussehen:

00:18:36,610 --> 00:18:39,970
Nehmen wir an, wir haben genau zwei
Konten, ein Sparkonto und ein Girokonto.

00:18:40,990 --> 00:18:41,679
Dann müssen die jeweils einen Besitzer haben.

00:18:41,679 --> 00:18:42,179
Sie könnten auch den gleichen Besitzer haben.

00:18:43,660 --> 00:18:48,190
Ein Kunde darf mehrere Konten haben,
weil hier nichts eingeschränkt ist.

00:18:48,190 --> 00:18:51,430
Aber jedes Girokonto oder Sparkonto
muss genau einen Besitzer haben.

00:18:52,780 --> 00:18:56,110
Es könnte ja auch wieder ein zweites
Objekt geben, einen anderen Kunden,

00:18:56,110 --> 00:19:00,430
und der würde eben das Sparkonto
besitzen und Klaus nur das Girokonto.

00:19:00,430 --> 00:19:01,930
Das wäre auch erlaubt.

00:19:01,930 --> 00:19:06,160
Was hingegen nicht erlaubt wäre, wäre
dass es einfach noch ein weiteres

00:19:06,160 --> 00:19:09,880
Sparkonto oder weiteres Girokonto
gibt, die keinen Besitzer haben.

00:19:09,880 --> 00:19:13,150
Denn dann würde diese
Forderung nicht erfüllt werden.

00:19:13,150 --> 00:19:22,390
Es dürfte natürlich auch nicht sein, dass
es noch einen weiteren Kunden gibt und das

00:19:22,390 --> 00:19:28,120
Sparkonto sowohl von Klaus als auch von
diesem anderen Kunden besessen würde.

00:19:28,120 --> 00:19:31,060
Weil das auch dieser 1 hier widersprechen würde.

00:19:36,280 --> 00:19:42,550
Weitere Diskussionen zur Passung von
Objektdiagrammen zu Klassendiagrammen,

00:19:42,550 --> 00:19:47,500
mit mindestens einem weiteren
Beispiel, per extra Video.
