264 # slide
00:00:00,000 --> 00:00:08,820
Eingangs hatte ich motiviert, dass wir
diese UML-Zustandsdiagramme betrachten,

00:00:08,820 --> 00:00:12,390
und dass viele der Features, die sie
unterstützen, vor allem dazu gedacht sind,

00:00:12,390 --> 00:00:16,020
Diagramme kompakt und übersichtlich zu notieren.

00:00:16,020 --> 00:00:22,170
Also nicht flache Zustandsdiagramme mit
sehr vielen Zuständen angeben zu müssen.

00:00:23,280 --> 00:00:25,860
Diese Kompaktheit hat auch ein Gegenstück.

00:00:25,860 --> 00:00:30,090
Man kann nämlich auch umgekehrt aus einem
solchen kompakten UML-Zustandsdiagramm wieder

00:00:30,090 --> 00:00:32,550
ein flaches Zustandsdiagramm machen,
durch sogenanntes Flachklopfen.

00:00:33,570 --> 00:00:38,880
Das will ich hier abschließend noch in
drei Videos mit Beispielen betrachten.

00:00:41,280 --> 00:00:44,580
Man kann ein UML-Zustandsdiagramm
nehmen und es flachklopfen,

00:00:44,580 --> 00:00:49,860
dabei die zusammengesetzten Zustände (ob
nun hierarchische oder durch Regionen

00:00:49,860 --> 00:00:55,080
gebildete) auflösen, und erhält dadurch
äquivalente flache Zustandsdiagramme.

00:00:55,080 --> 00:00:58,230
Also Zustandsdiagramme, die all
diese Features nicht benutzen.

00:00:58,230 --> 00:01:02,880
Und äquivalent in dem Sinne, dass
die Semantik die gleiche ist,

00:01:02,880 --> 00:01:04,830
dass sie die gleichen Übergänge erlauben.

00:01:04,830 --> 00:01:09,360
So dass man im Grunde genommen auch mit diesem
flachen Zustandsdiagramm hätte arbeiten können,

00:01:09,360 --> 00:01:15,240
dies aber nicht möchte, weil man dann all diese
Vorteile der kompakten Darstellung verliert.

00:01:15,240 --> 00:01:20,040
Denn allgemein wird dieses flache
Zustandsdiagramm eben sehr viel

00:01:20,040 --> 00:01:22,770
mehr Zustände und/oder Transitionen enthalten.

00:01:22,770 --> 00:01:29,400
Ein bisschen entspricht das dem Übergang von
Petrinetzen zu deren Erreichbarkeitsgraphen,

00:01:29,970 --> 00:01:33,780
wo auch der Erreichbarkeitsgraph zu einem
Petrinetz sehr viel größer sein kann,

00:01:33,780 --> 00:01:38,400
weil das Petrinetz eine spezielle
kompakte Art ist, Verhalten darzustellen.

00:01:38,400 --> 00:01:41,930
Und so ähnlich kann man
das auch hier sehen.

00:01:41,930 --> 00:01:46,735
Ich werde das nicht formal machen.

00:01:46,735 --> 00:01:51,850
Wir werden uns einfach drei Beispiele ansehen
und an diesen die Strategien erläutern,

00:01:51,850 --> 00:01:56,410
die Sie dann auch auf andere Beispiele mit
den gleichen Features anwenden können sollen.

00:01:56,410 --> 00:01:59,500
Wir werden dabei nicht alle Features
von UML-Zustandsdiagrammen betrachten,

00:01:59,500 --> 00:02:02,530
auch nicht alle von uns gesehenen
oder Kombinationen davon.

00:02:02,530 --> 00:02:04,030
Und zwar ganz bewusst.

00:02:04,030 --> 00:02:09,010
Natürlich müssen Sie dann auch für
Übungen und später für die Klausur nur

00:02:09,010 --> 00:02:14,320
das selbst anwenden können, was auch
hier in den Beispielen auftritt.

00:02:17,590 --> 00:02:18,880
Machen wir das konkret für ein Beispiel.

00:02:18,880 --> 00:02:22,720
Hier ist ein UML-Zustandsdiagramm. Es ist
offenkundig kein flaches Zustandsdiagramm,

00:02:22,720 --> 00:02:25,900
weil es so einen hierarchischen
Zustand verwendet.

00:02:25,900 --> 00:02:31,270
Was dieses Beispiel auszeichnet, was hier
sozusagen noch recht einfach ist im Vergleich

00:02:31,270 --> 00:02:37,360
zu dem, was UML-Zustandsdiagramme insgesamt
könnten, ist, dass hier keine Regionen auftauchen.

00:02:37,360 --> 00:02:40,870
Also kein Regionen-Zustand, nur
tatsächlich so ein hierarchischer Zustand.

00:02:40,870 --> 00:02:43,990
Und es wird in diesem Beispiel
auch keine Historie verwendet.

00:02:43,990 --> 00:02:45,460
In anderen Beispielen wird
das gleich anders sein.

00:02:47,590 --> 00:02:49,150
Wie wäre hier die Strategie?

00:02:49,150 --> 00:02:51,550
Wie können wir daraus ein
flaches Zustandsdiagramm machen?

00:02:51,550 --> 00:02:54,310
Nun, offenkundig müssen wir
diese Hierarchie entfernen.

00:02:56,470 --> 00:02:58,360
Wir könnten sagen: wir behalten einfach
die simplen Zustände A, B, C, D.

00:02:58,360 --> 00:03:02,020
Das kann es aber natürlich noch nicht sein,
denn dann würden wir insbesondere diese

00:03:02,020 --> 00:03:08,140
Ein- und Austritte zu so einem hierarchischen
Zustand irgendwie ignorieren oder verlieren.

00:03:08,140 --> 00:03:13,630
Die Grundidee wird sein, zwar die einfachen
Zustände zu behalten (A, B, C, D werden in

00:03:13,630 --> 00:03:18,850
dem flachen Zustandsraum einfach nach wie vor
auftauchen), aber diese Ein- und Austritte

00:03:18,850 --> 00:03:21,580
an dem Rand von so einem hierarchischen
Zustand geeignet zu übersetzen.

00:03:21,580 --> 00:03:24,040
Also, wir müssen einfach
wissen, was es denn bedeutet,

00:03:24,040 --> 00:03:27,876
aus so einem Gesamtzustand mit
dem Trigger 'e' auszutreten.

00:03:27,876 --> 00:03:30,850
Das bedeutet (das wissen wir, wenn
wir zurückgehen auf die entsprechenden

00:03:30,850 --> 00:03:36,280
Folien), dass wir mit 'e' sowohl aus
C als auch aus D zu A kommen könnten.

00:03:36,280 --> 00:03:43,630
Das heißt, aus diesem einen Übergang hier
(in dem UML-Zustandsdiagramm) müssen in dem

00:03:43,630 --> 00:03:45,640
flachen Zustandsdiagramm
dann zwei Übergänge werden,

00:03:45,640 --> 00:03:47,080
nämlich einer von C und einer von D.

00:03:47,080 --> 00:03:52,540
Also genau da setzen wir ein, was wir über die
Austritte und auch über die Eintritte wissen.

00:03:52,540 --> 00:03:55,990
Also auch der Eintritt von A zu diesem
komplexen Zustand wird so behandelt.

00:03:55,990 --> 00:03:58,490
Da müssen wir wissen: was
bedeutet so ein Standardeintritt?

00:03:58,490 --> 00:04:02,000
Der bedeutet, dass wir hier
den Startzustand nehmen würden.

00:04:02,000 --> 00:04:06,830
Das heißt, daraus wird im flachen Zustandsdiagramm
eine Verbindung direkt von A zu C.

00:04:06,830 --> 00:04:10,280
Wir werden also übersetzen, was denn diese Ein-

00:04:10,280 --> 00:04:13,250
und Austritte am Rand solch eines
hierarchischen Zustands bedeuten.

00:04:15,380 --> 00:04:18,110
Übergänge, die gar nichts
mit dieser Hierarchie zu

00:04:18,110 --> 00:04:21,260
tun haben und die schlicht zwischen einfachen
Unterzuständen sind, die werden beibehalten.

00:04:21,260 --> 00:04:24,260
Also dass wir von A nach B mit 'f' gehen können.

00:04:24,260 --> 00:04:28,640
Das ist in dem UML-Zustandsdiagramm so, und
da sind nicht irgendwie Hierarchien im Spiel.

00:04:28,640 --> 00:04:34,340
Das heißt, da wir diese einfachen Zustände A, B, C,
D behalten haben, können wir auch solche Übergänge,

00:04:34,340 --> 00:04:41,570
die nicht irgendwie den Rand eines hierarchischen
Zustands betreffen, einfach behalten.

00:04:43,670 --> 00:04:48,530
Dann hätten wir bis auf den Umgang mit
Startzuständen alles abgefrühstückt.

00:04:49,490 --> 00:04:53,600
Was wird der Startzustand eines
zugehörigen flachen Zustandsdiagramms sein?

00:04:53,600 --> 00:04:54,830
Es kann nur einen haben.

00:04:54,830 --> 00:04:58,760
Anders als im UML-Zustandsdiagramm, wo es mehrere
Startzustände geben kann (nämlich in verschiedenen

00:04:58,760 --> 00:05:03,470
Regionen oder verschiedenen Schachtelungsebenen),
darf es in dem flachen nur noch einen geben.

00:05:03,470 --> 00:05:04,880
Und das wird natürlich der äußerste sein.

00:05:06,050 --> 00:05:09,500
Weil das hier in dem UML-Zustandsdiagramm
der äußerste Startzustand ist,

00:05:09,500 --> 00:05:13,070
bleibt er auch als Startzustand in
dem flachen Zustandsdiagramm erhalten.

00:05:13,070 --> 00:05:18,530
Hingegen etwa dieser Startzustand in dieser
inneren Schachtelungsebene, der wird im

00:05:18,530 --> 00:05:20,180
flachen Zustandsdiagramm nicht mehr auftauchen.

00:05:20,180 --> 00:05:24,620
Der ist eventuell relevant bei der Übersetzung
(also die Information, dass wir mit diesem

00:05:24,620 --> 00:05:29,660
Übergang, was ein Standardeintritt ist, eigentlich
zu C gehen würden, weil das der Startzustand ist),

00:05:29,660 --> 00:05:32,120
diese Information wird beim
Erzeugen des Startzustands genutzt.

00:05:32,120 --> 00:05:37,550
Aber dieser Knoten selbst muss in dem flachen
Zustandsdiagramm dann nicht mehr auftauchen.

00:05:42,060 --> 00:05:43,346
Was passiert?

00:05:43,346 --> 00:05:44,550
Was wäre die Aussage?

00:05:44,550 --> 00:05:50,220
Die Aussage war: die einfachen Zustände
behalten (deswegen behalten wir A, B, C,

00:05:50,220 --> 00:05:54,450
D), die Ein- und Austritte übersetzen
(das werden wir gleich tun),

00:05:54,450 --> 00:06:02,130
andere Übergänge zwischen diesen
Zuständen einfach behalten.

00:06:02,130 --> 00:06:02,790
Das können wir schon mal machen.

00:06:02,790 --> 00:06:09,420
Wir werden sozusagen die Eingänge behalten,
die einerseits diesem Startzustand hier,

00:06:09,420 --> 00:06:12,330
dem äußersten Startzustand, genügen
oder entsprechen, aber insbesondere

00:06:12,330 --> 00:06:17,280
auch diejenigen Übergänge, die nicht irgendwie am
Rand eines solchen hierarchischen Zustands sind.

00:06:17,280 --> 00:06:19,950
Also dieser wird behalten, dieser wird
behalten, diese beiden werden behalten.

00:06:19,950 --> 00:06:22,410
Das erklärt, warum wir diese Übergänge haben.

00:06:23,370 --> 00:06:28,110
Und dann müssen wir nur noch die Übergänge
übersetzen, die etwas mit dem Rand von einem

00:06:28,110 --> 00:06:32,790
hierarchischen Zustand zu tun haben, also
diesen 'e'-Übergang und diesen 'a'-Übergang.

00:06:33,630 --> 00:06:34,770
Was ist da die jeweilige Übersetzung?

00:06:34,770 --> 00:06:39,030
Für den 'a'-Übergang wissen wir:

00:06:39,030 --> 00:06:42,390
Das war ein Standardeintritt in
diesen komplexen rechten Zustand.

00:06:42,390 --> 00:06:48,990
Und wir wissen, dass wir da einfach beim
Startzustand von der inneren Ebene fortsetzen.

00:06:48,990 --> 00:06:53,586
Das war genau die Verbindung, die es hier gab.

00:06:53,586 --> 00:06:54,990
Dann können wir danach auch
 diese Markierung entfernen,

00:06:54,990 --> 00:06:57,000
weil sie nicht auf der äußersten Ebene war.

00:06:57,000 --> 00:06:59,910
Sie bleibt so in dem flachen Zustandsdiagramm
nicht erhalten, sollte aber benutzt werden,

00:06:59,910 --> 00:07:03,570
um festzustellen, wo wir von A mit 'a' hinkommen.

00:07:05,850 --> 00:07:08,100
Das ist die Übersetzung dieses Teils.

00:07:09,750 --> 00:07:10,680
Und dann müssen wir uns noch um 'e' kümmern.

00:07:10,680 --> 00:07:16,440
Das ist dieser Übergang, der ja vom Rand
dieses komplexen Zustands zu A geht.

00:07:20,430 --> 00:07:24,460
Das sind dann diese beiden Übergänge, die
wir genau dahingehend übersetzen müssen,

00:07:24,460 --> 00:07:29,800
dass man sowohl von C als auch von D
zu diesem linken Zustand A kommen kann.

00:07:34,240 --> 00:07:37,390
Und dann hätten wir das vollständig übersetzt.

00:07:37,390 --> 00:07:42,580
Aus diesem UML-Zustandsdiagramm
wird dieses flache Zustandsdiagramm,

00:07:42,580 --> 00:07:44,620
wo keine Hierarchien mehr vorkommen.

00:07:44,620 --> 00:07:46,870
Das ist ein ganz normales
flaches Zustandsdiagramm.

00:07:46,870 --> 00:07:57,250
Und der Hauptschritt war in dem konkreten
Fall hier eben, diese eine Transition,

00:07:57,250 --> 00:07:59,650
die von dem hierarchischen Zustand weg führte,

00:07:59,650 --> 00:08:02,740
durch mehrere Transitionen zu ersetzen,
die von den Zuständen ausgehen.

00:08:02,740 --> 00:08:07,270
Das war die Übersetzung dieser
einen konkreten Transition vom Rand.

00:08:07,270 --> 00:08:09,130
Auch mit der hier haben wir etwas gemacht.

00:08:09,130 --> 00:08:11,050
Das war nämlich eine Transition,

00:08:11,050 --> 00:08:15,760
die zum Standardeintritt führte und
dann in der Fortsetzung zu C führte.

00:08:16,270 --> 00:08:19,870
Das haben wir auch hier eingesetzt.

00:08:19,870 --> 00:08:25,810
Die Grundstrategie ist, alle diese Ein-
und Austritte am Rand hierarchischer

00:08:25,810 --> 00:08:29,950
Zustände geeignet zu übersetzen und
den Rest im Wesentlichen zu behalten.

00:08:29,950 --> 00:08:30,760
So wie es hier steht.

00:08:30,760 --> 00:08:34,270
Das ist der einfachste Fall, weil
es auch das erste Beispiel war.
